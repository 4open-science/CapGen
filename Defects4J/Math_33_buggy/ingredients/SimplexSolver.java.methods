Itr		java.util.ArrayList$Itr	[]
Itr	boolean	hasNext	[]
Itr	E	next	[]
Itr	void	remove	[]
Itr	void	forEachRemaining	[java.util.function.Consumer]
Itr	void	checkForComodification	[]
ListItr		java.util.ArrayList$ListItr	[int]
ListItr	boolean	hasPrevious	[]
ListItr	int	nextIndex	[]
ListItr	int	previousIndex	[]
ListItr	E	previous	[]
ListItr	void	set	[E]
ListItr	void	add	[E]
SubList		java.util.ArrayList$SubList	[java.util.AbstractList, int, int, int]
SubList	E	set	[int, E]
SubList	E	get	[int]
SubList	int	size	[]
SubList	void	add	[int, E]
SubList	E	remove	[int]
SubList	void	removeRange	[int, int]
SubList	boolean	addAll	[java.util.Collection]
SubList	boolean	addAll	[int, java.util.Collection]
SubList	java.util.Iterator	iterator	[]
1		java.util.ArrayList$SubList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	void	forEachRemaining	[java.util.function.Consumer]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	checkForComodification	[]
SubList	java.util.ListIterator	listIterator	[int]
SubList	java.util.List	subList	[int, int]
SubList	void	rangeCheck	[int]
SubList	void	rangeCheckForAdd	[int]
SubList	java.lang.String	outOfBoundsMsg	[int]
SubList	void	checkForComodification	[]
SubList	java.util.Spliterator	spliterator	[]
ArrayListSpliterator		java.util.ArrayList$ArrayListSpliterator	[java.util.ArrayList, int, int, int]
ArrayListSpliterator	int	getFence	[]
ArrayListSpliterator	java.util.ArrayList$ArrayListSpliterator	trySplit	[]
ArrayListSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ArrayListSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ArrayListSpliterator	long	estimateSize	[]
ArrayListSpliterator	int	characteristics	[]
ArrayList		java.util.ArrayList	[int]
ArrayList		java.util.ArrayList	[]
ArrayList		java.util.ArrayList	[java.util.Collection]
ArrayList	void	trimToSize	[]
ArrayList	void	ensureCapacity	[int]
ArrayList	void	ensureCapacityInternal	[int]
ArrayList	void	ensureExplicitCapacity	[int]
ArrayList	void	grow	[int]
ArrayList	int	hugeCapacity	[int]
ArrayList	int	size	[]
ArrayList	boolean	isEmpty	[]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	int	lastIndexOf	[java.lang.Object]
ArrayList	java.lang.Object	clone	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	<T>	T[] toArray	[T[]]
ArrayList	E	elementData	[int]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	boolean	add	[E]
ArrayList	void	add	[int, E]
ArrayList	E	remove	[int]
ArrayList	boolean	remove	[java.lang.Object]
ArrayList	void	fastRemove	[int]
ArrayList	void	clear	[]
ArrayList	boolean	addAll	[java.util.Collection]
ArrayList	boolean	addAll	[int, java.util.Collection]
ArrayList	void	removeRange	[int, int]
ArrayList	void	rangeCheck	[int]
ArrayList	void	rangeCheckForAdd	[int]
ArrayList	java.lang.String	outOfBoundsMsg	[int]
ArrayList	boolean	removeAll	[java.util.Collection]
ArrayList	boolean	retainAll	[java.util.Collection]
ArrayList	boolean	batchRemove	[java.util.Collection, boolean]
ArrayList	void	writeObject	[java.io.ObjectOutputStream]
ArrayList	void	readObject	[java.io.ObjectInputStream]
ArrayList	java.util.ListIterator	listIterator	[int]
ArrayList	java.util.ListIterator	listIterator	[]
ArrayList	java.util.Iterator	iterator	[]
ArrayList	java.util.List	subList	[int, int]
ArrayList	void	subListRangeCheck	[int, int, int]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	java.util.Spliterator	spliterator	[]
ArrayList	boolean	removeIf	[java.util.function.Predicate]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
MaxCountExceededException		org.apache.commons.math3.exception.MaxCountExceededException	[java.lang.Number]
MaxCountExceededException		org.apache.commons.math3.exception.MaxCountExceededException	[org.apache.commons.math3.exception.util.Localizable, java.lang.Number, java.lang.Object[]]
MaxCountExceededException	java.lang.Number	getMax	[]
SimplexSolver		org.apache.commons.math3.optimization.linear.SimplexSolver	[]
SimplexSolver		org.apache.commons.math3.optimization.linear.SimplexSolver	[double, int]
SimplexSolver	java.lang.Integer	getPivotColumn	[org.apache.commons.math3.optimization.linear.SimplexTableau]
SimplexSolver	java.lang.Integer	getPivotRow	[org.apache.commons.math3.optimization.linear.SimplexTableau, int]
SimplexSolver	void	doIteration	[org.apache.commons.math3.optimization.linear.SimplexTableau]
SimplexSolver	void	solvePhase1	[org.apache.commons.math3.optimization.linear.SimplexTableau]
SimplexSolver	org.apache.commons.math3.optimization.PointValuePair	doOptimize	[]
PointValuePair		org.apache.commons.math3.optimization.PointValuePair	[double[], double]
PointValuePair		org.apache.commons.math3.optimization.PointValuePair	[double[], double, boolean]
PointValuePair	double[]	getPoint	[]
PointValuePair	double[]	getPointRef	[]
Precision		org.apache.commons.math3.util.Precision	[]
Precision	int	compareTo	[double, double, double]
Precision	int	compareTo	[double, double, int]
Precision	boolean	equals	[float, float]
Precision	boolean	equalsIncludingNaN	[float, float]
Precision	boolean	equals	[float, float, float]
Precision	boolean	equalsIncludingNaN	[float, float, float]
Precision	boolean	equals	[float, float, int]
Precision	boolean	equalsIncludingNaN	[float, float, int]
Precision	boolean	equals	[double, double]
Precision	boolean	equalsIncludingNaN	[double, double]
Precision	boolean	equals	[double, double, double]
Precision	boolean	equalsIncludingNaN	[double, double, double]
Precision	boolean	equals	[double, double, int]
Precision	boolean	equalsIncludingNaN	[double, double, int]
Precision	double	round	[double, int]
Precision	double	round	[double, int, int]
Precision	float	round	[float, int]
Precision	float	round	[float, int, int]
Precision	double	roundUnscaled	[double, double, int]
Precision	double	representableDelta	[double, double]
