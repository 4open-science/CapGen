null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	37668:37670	1069:1069	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
char	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	38107:38112	1085:1085	mValue	[]	[char:mValue]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	38116:38120	1085:1085	value	[]	[char:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	38107:38121	1085:1085	mValue = value	[]	[char:value, char:mValue]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	38198:38200	1091:1091	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	38240:38240	1092:1092	1	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	38233:38241	1092:1092	return 1	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	38386:38391	1099:1099	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtFieldReadImpl	38400:38405	1099:1099	mValue	[]	[char:mValue]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	38386:38407	1099:1099	buffer.append(mValue)	[java.lang.StringBuffer:append]	[char:mValue, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	38828:38833	1116:1116	mValue	[]	[java.lang.String:mValue]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	38837:38841	1116:1116	value	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	38828:38842	1116:1116	mValue = value	[]	[java.lang.String:value, java.lang.String:mValue]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	38919:38921	1122:1122	int	[]	[]	[]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	38961:38966	1123:1123	mValue	[]	[java.lang.String:mValue]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	38961:38975	1123:1123	mValue.length()	[int:length]	[java.lang.String:mValue]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	38954:38976	1123:1123	return mValue.length()	[int:length]	[java.lang.String:mValue]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39121:39126	1130:1130	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	39135:39140	1130:1130	mValue	[]	[java.lang.String:mValue]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	39121:39142	1130:1130	buffer.append(mValue)	[java.lang.StringBuffer:append]	[java.lang.String:mValue, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39312:39314	1138:1138	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39603:39605	1148:1148	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	39645:39650	1149:1149	mField	[]	[int:mField]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39654:39658	1149:1149	field	[]	[int:field]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	39645:39659	1149:1149	mField = field	[]	[int:mField, int:field]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	39673:39679	1150:1150	mValues	[]	[java.lang.String[]:mValues]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39683:39688	1150:1150	values	[]	[java.lang.String[]:values]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	39673:39689	1150:1150	mValues = values	[]	[java.lang.String[]:mValues, java.lang.String[]:values]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39766:39768	1156:1156	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39801:39803	1157:1157	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	39811:39811	1157:1157	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	39801:39812	1157:1157	int max = 0	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39831:39833	1158:1158	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	39837:39843	1158:1158	mValues	[]	[java.lang.String[]:mValues]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	39837:39850	1158:1158	mValues.length	[]	[int:length, java.lang.String[]:mValues]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	39831:39850	1158:1158	int i = mValues.length	[]	[int:length, java.lang.String[]:mValues]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	39855:39855	1158:1158	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	39853:39855	1158:1158	--i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	39860:39860	1158:1158	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	39853:39860	1158:1158	(--i) >= 0	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	39883:39885	1159:1159	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	39893:39899	1159:1159	mValues	[]	[java.lang.String[]:mValues]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39901:39901	1159:1159	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtArrayReadImpl	39893:39902	1159:1159	mValues[i]	[]	[int:i, java.lang.String[]:mValues]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	39893:39911	1159:1159	mValues[i].length()	[int:length]	[int:i, java.lang.String[]:mValues]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	39883:39912	1159:1159	int len = mValues[i].length()	[int:length]	[int:i, java.lang.String[]:mValues]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39934:39936	1160:1160	len	[]	[int:len]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39940:39942	1160:1160	max	[]	[int:max]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	39934:39942	1160:1160	len > max	[]	[int:len, int:max]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	39967:39969	1161:1161	max	[]	[int:max]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	39973:39975	1161:1161	len	[]	[int:len]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	39967:39976	1161:1161	max = len	[]	[int:len, int:max]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	39930:39994	1160:1162	if (len > max) {    max = len;}	[]	[int:len, int:max]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	39826:40008	1158:1163	for (int i = mValues.length; (--i) >= 0;) {    int len = mValues[i].length();    if (len > max) {        max = len;    }}	[int:length]	[int:length, int:i, java.lang.String[]:mValues, int:len, int:max]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40029:40031	1164:1164	max	[]	[int:max]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	40022:40032	1164:1164	return max	[]	[int:max]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40177:40182	1171:1171	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	40191:40197	1171:1171	mValues	[]	[java.lang.String[]:mValues]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40199:40206	1171:1171	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	40212:40217	1171:1171	mField	[]	[int:mField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	40199:40218	1171:1171	calendar.get(mField)	[int:get]	[int:mField, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtArrayReadImpl	40191:40219	1171:1171	mValues[calendar.get(mField)]	[int:get]	[int:mField, java.lang.String[]:mValues, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	40177:40221	1171:1171	buffer.append(mValues[calendar.get(mField)])	[java.lang.StringBuffer:append, int:get]	[int:mField, java.lang.String[]:mValues, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	40403:40405	1179:1179	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	40609:40611	1186:1186	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	40634:40639	1187:1187	mField	[]	[int:mField]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40643:40647	1187:1187	field	[]	[int:field]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	40634:40648	1187:1187	mField = field	[]	[int:mField, int:field]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	40725:40727	1193:1193	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	40767:40767	1194:1194	4	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	40760:40768	1194:1194	return 4	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40922:40927	1201:1201	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	40930:40937	1201:1201	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	40943:40948	1201:1201	mField	[]	[int:mField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	40930:40949	1201:1201	calendar.get(mField)	[int:get]	[int:mField, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	40913:40951	1201:1201	appendTo(buffer, calendar.get(mField))	[void:appendTo, int:get]	[int:mField, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	41069:41071	1207:1207	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41098:41102	1208:1208	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	41106:41107	1208:1208	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41098:41107	1208:1208	value < 10	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41128:41133	1209:1209	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41149:41153	1209:1209	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	41157:41159	1209:1209	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41148:41160	1209:1209	(char) (value + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	41128:41162	1209:1209	buffer.append(((char) (value + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41187:41191	1210:1210	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	41195:41197	1210:1210	100	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41187:41197	1210:1210	value < 100	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41218:41223	1211:1211	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41239:41243	1211:1211	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	41247:41248	1211:1211	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41239:41248	1211:1211	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	41252:41254	1211:1211	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41238:41255	1211:1211	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	41218:41257	1211:1211	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41275:41280	1212:1212	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41296:41300	1212:1212	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	41304:41305	1212:1212	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41296:41305	1212:1212	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	41309:41311	1212:1212	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	41295:41312	1212:1212	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	41275:41314	1212:1212	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41353:41358	1214:1214	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	41367:41373	1214:1214	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	41384:41388	1214:1214	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	41367:41389	1214:1214	java.lang.Integer.toString(value)	[java.lang.String:toString]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	41353:41391	1214:1214	buffer.append(java.lang.Integer.toString(value))	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	41183:41405	1210:1215	if (value < 100) {    buffer.append(((char) ((value / 10) + '0')));    buffer.append(((char) ((value % 10) + '0')));}else {    buffer.append(java.lang.Integer.toString(value));}	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	41094:41405	1208:1215	if (value < 10) {    buffer.append(((char) (value + '0')));}else    if (value < 100) {        buffer.append(((char) ((value / 10) + '0')));        buffer.append(((char) ((value % 10) + '0')));    }else {        buffer.append(java.lang.Integer.toString(value));    }	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	41614:41637	1223:1223	new org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField()	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	41873:41875	1236:1236	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	41915:41915	1237:1237	2	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	41908:41916	1237:1237	return 2	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42070:42075	1244:1244	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42078:42085	1244:1244	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	42091:42098	1244:1244	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	42091:42104	1244:1244	java.util.Calendar.MONTH	[]	[int:MONTH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	42078:42105	1244:1244	calendar.get(java.util.Calendar.MONTH)	[int:get]	[int:MONTH, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	42109:42109	1244:1244	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42078:42109	1244:1244	(calendar.get(java.util.Calendar.MONTH)) + 1	[int:get]	[int:MONTH, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	42061:42111	1244:1244	appendTo(buffer, ((calendar.get(java.util.Calendar.MONTH)) + 1))	[void:appendTo, int:get]	[int:MONTH, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	42229:42231	1250:1250	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42258:42262	1251:1251	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	42266:42267	1251:1251	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42258:42267	1251:1251	value < 10	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42288:42293	1252:1252	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42309:42313	1252:1252	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	42317:42319	1252:1252	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42308:42320	1252:1252	(char) (value + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	42288:42322	1252:1252	buffer.append(((char) (value + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42361:42366	1254:1254	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42382:42386	1254:1254	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	42390:42391	1254:1254	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42382:42391	1254:1254	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	42395:42397	1254:1254	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42381:42398	1254:1254	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	42361:42400	1254:1254	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42418:42423	1255:1255	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42439:42443	1255:1255	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	42447:42448	1255:1255	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42439:42448	1255:1255	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	42452:42454	1255:1255	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42438:42455	1255:1255	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	42418:42457	1255:1255	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	42254:42471	1251:1256	if (value < 10) {    buffer.append(((char) (value + '0')));}else {    buffer.append(((char) ((value / 10) + '0')));    buffer.append(((char) ((value % 10) + '0')));}	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	42648:42650	1264:1264	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	42682:42684	1265:1265	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	42907:42909	1273:1273	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	42918:42920	1273:1273	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	42946:42949	1274:1274	size	[]	[int:size]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	42953:42953	1274:1274	3	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	42946:42953	1274:1274	size < 3	[]	[int:size]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	43054:43083	1276:1276	new java.lang.IllegalArgumentException()	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	43048:43084	1276:1276	throw new java.lang.IllegalArgumentException()	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	42942:43098	1274:1277	if (size < 3) {    throw new java.lang.IllegalArgumentException();}	[]	[int:size]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	43112:43117	1278:1278	mField	[]	[int:mField]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43121:43125	1278:1278	field	[]	[int:field]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	43112:43126	1278:1278	mField = field	[]	[int:mField, int:field]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	43140:43144	1279:1279	mSize	[]	[int:mSize]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43148:43151	1279:1279	size	[]	[int:size]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	43140:43152	1279:1279	mSize = size	[]	[int:mSize, int:size]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	43229:43231	1285:1285	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43271:43271	1286:1286	4	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	43264:43272	1286:1286	return 4	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43426:43431	1293:1293	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43434:43441	1293:1293	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	43447:43452	1293:1293	mField	[]	[int:mField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	43434:43453	1293:1293	calendar.get(mField)	[int:get]	[int:mField, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	43417:43455	1293:1293	appendTo(buffer, calendar.get(mField))	[void:appendTo, int:get]	[int:mField, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	43573:43575	1299:1299	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43602:43606	1300:1300	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43610:43612	1300:1300	100	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43602:43612	1300:1300	value < 100	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	43638:43640	1301:1301	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	43646:43650	1301:1301	mSize	[]	[int:mSize]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	43638:43650	1301:1301	int i = mSize	[]	[int:mSize]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	43655:43655	1301:1301	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	43653:43655	1301:1301	--i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43660:43660	1301:1301	2	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43653:43660	1301:1301	(--i) >= 2	[]	[int:i]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43687:43692	1302:1302	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	43701:43703	1302:1302	'0'	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	43687:43705	1302:1302	buffer.append('0')	[java.lang.StringBuffer:append]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	43633:43723	1301:1303	for (int i = mSize; (--i) >= 2;) {    buffer.append('0');}	[java.lang.StringBuffer:append]	[int:mSize, int:i, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43741:43746	1304:1304	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43762:43766	1304:1304	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43770:43771	1304:1304	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43762:43771	1304:1304	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	43775:43777	1304:1304	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43761:43778	1304:1304	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	43741:43780	1304:1304	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43798:43803	1305:1305	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43819:43823	1305:1305	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43827:43828	1305:1305	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43819:43828	1305:1305	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	43832:43834	1305:1305	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43818:43835	1305:1305	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	43798:43837	1305:1305	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	43876:43878	1307:1307	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	43876:43886	1307:1307	int digits	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	43908:43912	1308:1308	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43916:43919	1308:1308	1000	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	43908:43919	1308:1308	value < 1000	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	43944:43949	1309:1309	digits	[]	[int:digits]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	43953:43953	1309:1309	3	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	43944:43954	1309:1309	digits = 3	[]	[int:digits]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	44001:44008	1311:1311	org.apache.commons.lang3.Validate	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44017:44021	1311:1311	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	44026:44026	1311:1311	1	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	44025:44026	1311:1311	-1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	44017:44026	1311:1311	value > (-1)	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	44029:44068	1311:1311	"Negative values should not be possible"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44071:44075	1311:1311	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	44001:44077	1311:1311	org.apache.commons.lang3.Validate.isTrue((value > (-1)), "Negative values should not be possible", value)	[void:isTrue]	[int:value]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	44099:44104	1312:1312	digits	[]	[int:digits]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	44108:44114	1312:1312	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44125:44129	1312:1312	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	44108:44130	1312:1312	java.lang.Integer.toString(value)	[java.lang.String:toString]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	44108:44139	1312:1312	java.lang.Integer.toString(value).length()	[int:toString, java.lang.String:toString]	[int:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	44099:44140	1312:1312	digits = java.lang.Integer.toString(value).length()	[int:toString, java.lang.String:toString]	[int:digits, int:value]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	43904:44158	1308:1313	if (value < 1000) {    digits = 3;}else {    org.apache.commons.lang3.Validate.isTrue((value > (-1)), "Negative values should not be possible", value);    digits = java.lang.Integer.toString(value).length();}	[void:isTrue, int:toString, java.lang.String:toString]	[int:digits, int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	44181:44183	1314:1314	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	44189:44193	1314:1314	mSize	[]	[int:mSize]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	44181:44193	1314:1314	int i = mSize	[]	[int:mSize]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	44198:44198	1314:1314	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	44196:44198	1314:1314	--i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44203:44208	1314:1314	digits	[]	[int:digits]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	44196:44208	1314:1314	(--i) >= digits	[]	[int:digits, int:i]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44235:44240	1315:1315	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	44249:44251	1315:1315	'0'	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	44235:44253	1315:1315	buffer.append('0')	[java.lang.StringBuffer:append]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	44176:44271	1314:1316	for (int i = mSize; (--i) >= digits;) {    buffer.append('0');}	[java.lang.StringBuffer:append]	[int:digits, int:mSize, int:i, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44289:44294	1317:1317	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	44303:44309	1317:1317	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44320:44324	1317:1317	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	44303:44325	1317:1317	java.lang.Integer.toString(value)	[java.lang.String:toString]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	44289:44327	1317:1317	buffer.append(java.lang.Integer.toString(value))	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	43598:44341	1300:1318	if (value < 100) {    for (int i = mSize; (--i) >= 2;) {        buffer.append('0');    }    buffer.append(((char) ((value / 10) + '0')));    buffer.append(((char) ((value % 10) + '0')));}else {    int digits;    if (value < 1000) {        digits = 3;    }else {        org.apache.commons.lang3.Validate.isTrue((value > (-1)), "Negative values should not be possible", value);        digits = java.lang.Integer.toString(value).length();    }    for (int i = mSize; (--i) >= digits;) {        buffer.append('0');    }    buffer.append(java.lang.Integer.toString(value));}	[java.lang.StringBuffer:append, void:isTrue, int:toString, java.lang.String:toString]	[int:digits, int:mSize, int:i, int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	44523:44525	1326:1326	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	44730:44732	1333:1333	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	44755:44760	1334:1334	mField	[]	[int:mField]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	44764:44768	1334:1334	field	[]	[int:field]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	44755:44769	1334:1334	mField = field	[]	[int:mField, int:field]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	44846:44848	1340:1340	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	44888:44888	1341:1341	2	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	44881:44889	1341:1341	return 2	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45043:45048	1348:1348	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45051:45058	1348:1348	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	45064:45069	1348:1348	mField	[]	[int:mField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	45051:45070	1348:1348	calendar.get(mField)	[int:get]	[int:mField, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	45034:45072	1348:1348	appendTo(buffer, calendar.get(mField))	[void:appendTo, int:get]	[int:mField, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	45190:45192	1354:1354	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45219:45223	1355:1355	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	45227:45229	1355:1355	100	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	45219:45229	1355:1355	value < 100	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45250:45255	1356:1356	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45271:45275	1356:1356	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	45279:45280	1356:1356	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	45271:45280	1356:1356	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	45284:45286	1356:1356	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	45270:45287	1356:1356	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	45250:45289	1356:1356	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45307:45312	1357:1357	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45328:45332	1357:1357	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	45336:45337	1357:1357	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	45328:45337	1357:1357	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	45341:45343	1357:1357	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	45327:45344	1357:1357	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	45307:45346	1357:1357	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45385:45390	1359:1359	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	45399:45405	1359:1359	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	45416:45420	1359:1359	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	45399:45421	1359:1359	java.lang.Integer.toString(value)	[java.lang.String:toString]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	45385:45423	1359:1359	buffer.append(java.lang.Integer.toString(value))	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	45215:45437	1355:1360	if (value < 100) {    buffer.append(((char) ((value / 10) + '0')));    buffer.append(((char) ((value % 10) + '0')));}else {    buffer.append(java.lang.Integer.toString(value));}	[java.lang.StringBuffer:append, java.lang.String:toString]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	45643:45665	1368:1368	new org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField()	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	45888:45890	1380:1380	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	45930:45930	1381:1381	2	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	45923:45931	1381:1381	return 2	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46085:46090	1388:1388	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46093:46100	1388:1388	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	46106:46113	1388:1388	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	46106:46118	1388:1388	java.util.Calendar.YEAR	[]	[int:YEAR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	46093:46119	1388:1388	calendar.get(java.util.Calendar.YEAR)	[int:get]	[int:YEAR, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	46123:46125	1388:1388	100	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	46093:46125	1388:1388	(calendar.get(java.util.Calendar.YEAR)) % 100	[int:get]	[int:YEAR, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	46076:46127	1388:1388	appendTo(buffer, ((calendar.get(java.util.Calendar.YEAR)) % 100))	[void:appendTo, int:get]	[int:YEAR, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	46245:46247	1394:1394	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46270:46275	1395:1395	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46291:46295	1395:1395	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	46299:46300	1395:1395	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	46291:46300	1395:1395	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	46304:46306	1395:1395	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	46290:46307	1395:1395	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	46270:46309	1395:1395	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46323:46328	1396:1396	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	46344:46348	1396:1396	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	46352:46353	1396:1396	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	46344:46353	1396:1396	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	46357:46359	1396:1396	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	46343:46360	1396:1396	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	46323:46362	1396:1396	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	46571:46594	1404:1404	new org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField()	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	46819:46821	1416:1416	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	46861:46861	1417:1417	2	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	46854:46862	1417:1417	return 2	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47016:47021	1424:1424	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47024:47031	1424:1424	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	47037:47044	1424:1424	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	47037:47050	1424:1424	java.util.Calendar.MONTH	[]	[int:MONTH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	47024:47051	1424:1424	calendar.get(java.util.Calendar.MONTH)	[int:get]	[int:MONTH, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	47055:47055	1424:1424	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	47024:47055	1424:1424	(calendar.get(java.util.Calendar.MONTH)) + 1	[int:get]	[int:MONTH, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	47007:47057	1424:1424	appendTo(buffer, ((calendar.get(java.util.Calendar.MONTH)) + 1))	[void:appendTo, int:get]	[int:MONTH, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	47175:47177	1430:1430	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47200:47205	1431:1431	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47221:47225	1431:1431	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	47229:47230	1431:1431	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	47221:47230	1431:1431	value / 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	47234:47236	1431:1431	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	47220:47237	1431:1431	(char) ((value / 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	47200:47239	1431:1431	buffer.append(((char) ((value / 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47253:47258	1432:1432	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47274:47278	1432:1432	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	47282:47283	1432:1432	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	47274:47283	1432:1432	value % 10	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	47287:47289	1432:1432	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	47273:47290	1432:1432	(char) ((value % 10) + '0')	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	47253:47292	1432:1432	buffer.append(((char) ((value % 10) + '0')))	[java.lang.StringBuffer:append]	[int:value, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	47736:47740	1449:1449	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtVariableReadImpl	47744:47747	1449:1449	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	47736:47748	1449:1449	mRule = rule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:rule, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	47825:47827	1455:1455	int	[]	[]	[]	[]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	47867:47871	1456:1456	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	47867:47888	1456:1456	mRule.estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	47860:47889	1456:1456	return mRule.estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	48034:48036	1463:1463	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48046:48053	1463:1463	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	48059:48066	1463:1463	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	48059:48071	1463:1463	java.util.Calendar.HOUR	[]	[int:HOUR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	48046:48072	1463:1463	calendar.get(java.util.Calendar.HOUR)	[int:get]	[int:HOUR, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	48034:48073	1463:1463	int value = calendar.get(java.util.Calendar.HOUR)	[int:get]	[int:HOUR, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48091:48095	1464:1464	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	48100:48100	1464:1464	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	48091:48100	1464:1464	value == 0	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	48121:48125	1465:1465	value	[]	[int:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48129:48136	1465:1465	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	48154:48161	1465:1465	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	48154:48166	1465:1465	java.util.Calendar.HOUR	[]	[int:HOUR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	48129:48167	1465:1465	calendar.getLeastMaximum(java.util.Calendar.HOUR)	[int:getLeastMaximum]	[int:HOUR, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	48171:48171	1465:1465	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	48129:48171	1465:1465	(calendar.getLeastMaximum(java.util.Calendar.HOUR)) + 1	[int:getLeastMaximum]	[int:HOUR, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	48121:48172	1465:1465	value = (calendar.getLeastMaximum(java.util.Calendar.HOUR)) + 1	[int:getLeastMaximum]	[int:HOUR, int:value, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	48087:48186	1464:1466	if (value == 0) {    value = (calendar.getLeastMaximum(java.util.Calendar.HOUR)) + 1;}	[int:getLeastMaximum]	[int:HOUR, int:value, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	48200:48204	1467:1467	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48215:48220	1467:1467	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48223:48227	1467:1467	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	48200:48229	1467:1467	mRule.appendTo(buffer, value)	[void:appendTo]	[int:value, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	48341:48343	1473:1473	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	48366:48370	1474:1474	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48381:48386	1474:1474	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48389:48393	1474:1474	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	48366:48395	1474:1474	mRule.appendTo(buffer, value)	[void:appendTo]	[int:value, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	48856:48860	1491:1491	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtVariableReadImpl	48864:48867	1491:1491	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	48856:48868	1491:1491	mRule = rule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:rule, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	48945:48947	1497:1497	int	[]	[]	[]	[]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	48987:48991	1498:1498	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	48987:49008	1498:1498	mRule.estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	48980:49009	1498:1498	return mRule.estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	49154:49156	1505:1505	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49166:49173	1505:1505	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	49179:49186	1505:1505	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	49179:49198	1505:1505	java.util.Calendar.HOUR_OF_DAY	[]	[int:HOUR_OF_DAY]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	49166:49199	1505:1505	calendar.get(java.util.Calendar.HOUR_OF_DAY)	[int:get]	[int:HOUR_OF_DAY, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	49154:49200	1505:1505	int value = calendar.get(java.util.Calendar.HOUR_OF_DAY)	[int:get]	[int:HOUR_OF_DAY, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49218:49222	1506:1506	value	[]	[int:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	49227:49227	1506:1506	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	49218:49227	1506:1506	value == 0	[]	[int:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	49248:49252	1507:1507	value	[]	[int:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49256:49263	1507:1507	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	49276:49283	1507:1507	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	49276:49295	1507:1507	java.util.Calendar.HOUR_OF_DAY	[]	[int:HOUR_OF_DAY]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	49256:49296	1507:1507	calendar.getMaximum(java.util.Calendar.HOUR_OF_DAY)	[int:getMaximum]	[int:HOUR_OF_DAY, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	49300:49300	1507:1507	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	49256:49300	1507:1507	(calendar.getMaximum(java.util.Calendar.HOUR_OF_DAY)) + 1	[int:getMaximum]	[int:HOUR_OF_DAY, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	49248:49301	1507:1507	value = (calendar.getMaximum(java.util.Calendar.HOUR_OF_DAY)) + 1	[int:getMaximum]	[int:HOUR_OF_DAY, int:value, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	49214:49315	1506:1508	if (value == 0) {    value = (calendar.getMaximum(java.util.Calendar.HOUR_OF_DAY)) + 1;}	[int:getMaximum]	[int:HOUR_OF_DAY, int:value, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	49329:49333	1509:1509	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49344:49349	1509:1509	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49352:49356	1509:1509	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	49329:49358	1509:1509	mRule.appendTo(buffer, value)	[void:appendTo]	[int:value, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	49470:49472	1515:1515	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	49495:49499	1516:1516	mRule	[]	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49510:49515	1516:1516	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	49518:49522	1516:1516	value	[]	[int:value]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	49495:49524	1516:1516	mRule.appendTo(buffer, value)	[void:appendTo]	[int:value, org.apache.commons.lang3.time.FastDateFormat.NumberRule:mRule, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	49822:49824	1527:1527	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	50348:50350	1539:1539	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50373:50381	1540:1540	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50385:50392	1540:1540	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50373:50393	1540:1540	mTimeZone = timeZone	[]	[java.util.TimeZone:timeZone, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50407:50421	1541:1541	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50425:50438	1541:1541	timeZoneForced	[]	[boolean:timeZoneForced]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50407:50439	1541:1541	mTimeZoneForced = timeZoneForced	[]	[boolean:mTimeZoneForced, boolean:timeZoneForced]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50453:50459	1542:1542	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50463:50468	1542:1542	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50453:50469	1542:1542	mLocale = locale	[]	[java.util.Locale:mLocale, java.util.Locale:locale]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50483:50488	1543:1543	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50492:50496	1543:1543	style	[]	[int:style]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50483:50497	1543:1543	mStyle = style	[]	[int:style, int:mStyle]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50516:50529	1545:1545	timeZoneForced	[]	[boolean:timeZoneForced]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50550:50558	1546:1546	mStandard	[]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50581:50588	1546:1546	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	50591:50595	1546:1546	false	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50598:50602	1546:1546	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50605:50610	1546:1546	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	50562:50611	1546:1546	org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, style, locale)	[java.lang.String:getTimeZoneDisplay]	[int:style, java.util.TimeZone:timeZone, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50550:50612	1546:1546	mStandard = org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, style, locale)	[java.lang.String:getTimeZoneDisplay]	[int:style, java.util.TimeZone:timeZone, java.lang.String:mStandard, java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50630:50638	1547:1547	mDaylight	[]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50661:50668	1547:1547	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	50671:50674	1547:1547	true	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50677:50681	1547:1547	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	50684:50689	1547:1547	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	50642:50690	1547:1547	org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, style, locale)	[java.lang.String:getTimeZoneDisplay]	[int:style, java.util.TimeZone:timeZone, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50630:50691	1547:1547	mDaylight = org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, style, locale)	[java.lang.String:getTimeZoneDisplay]	[int:style, java.util.TimeZone:timeZone, java.lang.String:mDaylight, java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50730:50738	1549:1549	mStandard	[]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	50742:50745	1549:1549	null	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50730:50746	1549:1549	mStandard = null	[]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	50764:50772	1550:1550	mDaylight	[]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	50776:50779	1550:1550	null	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	50764:50780	1550:1550	mDaylight = null	[]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	50512:50794	1545:1551	if (timeZoneForced) {    mStandard = org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, style, locale);    mDaylight = org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, style, locale);}else {    mStandard = null;    mDaylight = null;}	[java.lang.String:getTimeZoneDisplay]	[int:style, java.util.TimeZone:timeZone, java.lang.String:mDaylight, java.lang.String:mStandard, java.util.Locale:locale, boolean:timeZoneForced]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	50871:50873	1557:1557	int	[]	[]	[]	[]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	50910:50924	1558:1558	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	50952:50955	1559:1559	java.lang.Math	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	50961:50969	1559:1559	mStandard	[]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	50961:50978	1559:1559	mStandard.length()	[int:length]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	50981:50989	1559:1559	mDaylight	[]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	50981:50998	1559:1559	mDaylight.length()	[int:length]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	50952:50999	1559:1559	java.lang.Math.max(mStandard.length(), mDaylight.length())	[int:length, int:max]	[java.lang.String:mDaylight, java.lang.String:mStandard]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	50945:51000	1559:1559	return java.lang.Math.max(mStandard.length(), mDaylight.length())	[int:length, int:max]	[java.lang.String:mDaylight, java.lang.String:mStandard]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51025:51030	1560:1560	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	51035:51042	1560:1560	java.util.TimeZone	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51035:51048	1560:1560	java.util.TimeZone.SHORT	[]	[int:SHORT]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	51025:51048	1560:1560	mStyle) == (java.util.TimeZone.SHORT	[]	[int:SHORT, int:mStyle]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	51076:51076	1561:1561	4	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	51069:51077	1561:1561	return 4	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	51123:51124	1563:1563	40	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	51116:51125	1563:1563	return 40	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	51021:51139	1560:1564	if ((mStyle) == (java.util.TimeZone.SHORT)) {    return 4;}else {    return 40;}	[]	[int:SHORT, int:mStyle]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	50906:51139	1558:1564	if (mTimeZoneForced) {    return java.lang.Math.max(mStandard.length(), mDaylight.length());}else    if ((mStyle) == (java.util.TimeZone.SHORT)) {        return 4;    }else {        return 40;    }	[int:length, int:max]	[boolean:mTimeZoneForced, java.lang.String:mDaylight, java.lang.String:mStandard, int:SHORT, int:mStyle]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51288:51302	1571:1571	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51327:51335	1572:1572	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	51327:51353	1572:1572	mTimeZone.useDaylightTime()	[boolean:useDaylightTime]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51358:51365	1572:1572	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	51371:51378	1572:1572	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51371:51389	1572:1572	java.util.Calendar.DST_OFFSET	[]	[int:DST_OFFSET]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	51358:51390	1572:1572	calendar.get(java.util.Calendar.DST_OFFSET)	[int:get]	[int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	51395:51395	1572:1572	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	51358:51395	1572:1572	(calendar.get(java.util.Calendar.DST_OFFSET)) != 0	[int:get]	[int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	51327:51395	1572:1572	mTimeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0	[boolean:useDaylightTime, int:get]	[int:DST_OFFSET, java.util.Calendar:calendar, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51420:51425	1573:1573	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51434:51442	1573:1573	mDaylight	[]	[java.lang.String:mDaylight]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	51420:51444	1573:1573	buffer.append(mDaylight)	[java.lang.StringBuffer:append]	[java.lang.String:mDaylight, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51491:51496	1575:1575	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51505:51513	1575:1575	mStandard	[]	[java.lang.String:mStandard]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	51491:51515	1575:1575	buffer.append(mStandard)	[java.lang.StringBuffer:append]	[java.lang.String:mStandard, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	51323:51533	1572:1576	if ((mTimeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0)) {    buffer.append(mDaylight);}else {    buffer.append(mStandard);}	[java.lang.StringBuffer:append, boolean:useDaylightTime, int:get]	[java.lang.String:mDaylight, int:DST_OFFSET, java.lang.String:mStandard, java.util.Calendar:calendar, java.util.TimeZone:mTimeZone, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51592:51599	1578:1578	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtInvocationImpl	51592:51613	1578:1578	calendar.getTimeZone()	[java.util.TimeZone:getTimeZone]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	51572:51614	1578:1578	java.util.TimeZone timeZone = calendar.getTimeZone()	[java.util.TimeZone:getTimeZone]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51636:51643	1579:1579	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	51636:51661	1579:1579	timeZone.useDaylightTime()	[boolean:useDaylightTime]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51666:51673	1579:1579	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	51679:51686	1579:1579	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51679:51697	1579:1579	java.util.Calendar.DST_OFFSET	[]	[int:DST_OFFSET]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	51666:51698	1579:1579	calendar.get(java.util.Calendar.DST_OFFSET)	[int:get]	[int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	51703:51703	1579:1579	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	51666:51703	1579:1579	(calendar.get(java.util.Calendar.DST_OFFSET)) != 0	[int:get]	[int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	51636:51703	1579:1579	timeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0	[boolean:useDaylightTime, int:get]	[java.util.TimeZone:timeZone, int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51728:51733	1580:1580	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51761:51768	1580:1580	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	51771:51774	1580:1580	true	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51777:51782	1580:1580	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51785:51791	1580:1580	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	51742:51792	1580:1580	org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, mStyle, mLocale)	[java.lang.String:getTimeZoneDisplay]	[java.util.Locale:mLocale, java.util.TimeZone:timeZone, int:mStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	51728:51794	1580:1580	buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, mStyle, mLocale))	[java.lang.String:getTimeZoneDisplay, java.lang.StringBuffer:append]	[java.util.Locale:mLocale, java.util.TimeZone:timeZone, int:mStyle, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51841:51846	1582:1582	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	51874:51881	1582:1582	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	51884:51888	1582:1582	false	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51891:51896	1582:1582	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	51899:51905	1582:1582	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	51855:51906	1582:1582	org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, mStyle, mLocale)	[java.lang.String:getTimeZoneDisplay]	[java.util.Locale:mLocale, java.util.TimeZone:timeZone, int:mStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	51841:51908	1582:1582	buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, mStyle, mLocale))	[java.lang.String:getTimeZoneDisplay, java.lang.StringBuffer:append]	[java.util.Locale:mLocale, java.util.TimeZone:timeZone, int:mStyle, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	51632:51926	1579:1583	if ((timeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0)) {    buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, mStyle, mLocale));}else {    buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, mStyle, mLocale));}	[java.lang.String:getTimeZoneDisplay, java.lang.StringBuffer:append, boolean:useDaylightTime, int:get]	[java.util.Locale:mLocale, java.util.TimeZone:timeZone, int:DST_OFFSET, int:mStyle, java.util.Calendar:calendar, java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	51284:51940	1571:1584	if (mTimeZoneForced) {    if ((mTimeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0)) {        buffer.append(mDaylight);    }else {        buffer.append(mStandard);    }}else {    java.util.TimeZone timeZone = calendar.getTimeZone();    if ((timeZone.useDaylightTime()) && ((calendar.get(java.util.Calendar.DST_OFFSET)) != 0)) {        buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, true, mStyle, mLocale));    }else {        buffer.append(org.apache.commons.lang3.time.FastDateFormat.getTimeZoneDisplay(timeZone, false, mStyle, mLocale));    }}	[java.lang.String:getTimeZoneDisplay, java.lang.StringBuffer:append, boolean:useDaylightTime, int:get, java.util.TimeZone:getTimeZone]	[java.util.Locale:mLocale, boolean:mTimeZoneForced, java.util.TimeZone:timeZone, java.lang.String:mDaylight, int:DST_OFFSET, java.lang.String:mStandard, int:mStyle, java.util.Calendar:calendar, java.util.TimeZone:mTimeZone, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	52231:52234	1593:1593	true	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	52208:52235	1593:1593	new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule(true)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	52321:52325	1594:1594	false	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	52298:52326	1594:1594	new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule(false)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	52656:52661	1604:1604	mColon	[]	[boolean:mColon]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	52665:52669	1604:1604	colon	[]	[boolean:colon]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	52656:52670	1604:1604	mColon = colon	[]	[boolean:mColon, boolean:colon]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	52747:52749	1610:1610	int	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	52789:52789	1611:1611	5	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	52782:52790	1611:1611	return 5	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	52935:52937	1618:1618	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	52948:52955	1618:1618	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	52961:52968	1618:1618	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	52961:52980	1618:1618	java.util.Calendar.ZONE_OFFSET	[]	[int:ZONE_OFFSET]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	52948:52981	1618:1618	calendar.get(java.util.Calendar.ZONE_OFFSET)	[int:get]	[int:ZONE_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	52985:52992	1618:1618	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	52998:53005	1618:1618	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	52998:53016	1618:1618	java.util.Calendar.DST_OFFSET	[]	[int:DST_OFFSET]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	52985:53017	1618:1618	calendar.get(java.util.Calendar.DST_OFFSET)	[int:get]	[int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	52948:53017	1618:1618	calendar.get(java.util.Calendar.ZONE_OFFSET)) + (calendar.get(java.util.Calendar.DST_OFFSET)	[int:get]	[int:ZONE_OFFSET, int:DST_OFFSET, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	52935:53018	1618:1618	int offset = (calendar.get(java.util.Calendar.ZONE_OFFSET)) + (calendar.get(java.util.Calendar.DST_OFFSET))	[int:get]	[int:ZONE_OFFSET, int:DST_OFFSET, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53049:53054	1620:1620	offset	[]	[int:offset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53058:53058	1620:1620	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53049:53058	1620:1620	offset < 0	[]	[int:offset]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53079:53084	1621:1621	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53093:53095	1621:1621	'-'	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53079:53097	1621:1621	buffer.append('-')	[java.lang.StringBuffer:append]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	53115:53120	1622:1622	offset	[]	[int:offset]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53125:53130	1622:1622	offset	[]	[int:offset]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	53124:53130	1622:1622	-offset	[]	[int:offset]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	53115:53131	1622:1622	offset = -offset	[]	[int:offset]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53170:53175	1624:1624	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53184:53186	1624:1624	'+'	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53170:53188	1624:1624	buffer.append('+')	[java.lang.StringBuffer:append]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	53045:53202	1620:1625	if (offset < 0) {    buffer.append('-');    offset = -offset;}else {    buffer.append('+');}	[java.lang.StringBuffer:append]	[int:offset, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	53229:53231	1627:1627	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53241:53246	1627:1627	offset	[]	[int:offset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53251:53252	1627:1627	60	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53256:53257	1627:1627	60	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53251:53257	1627:1627	60 * 60	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53261:53264	1627:1627	1000	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53250:53265	1627:1627	(60 * 60) * 1000	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53241:53265	1627:1627	offset / ((60 * 60) * 1000)	[]	[int:offset]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	53229:53266	1627:1627	int hours = offset / ((60 * 60) * 1000)	[]	[int:offset]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53280:53285	1628:1628	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53301:53305	1628:1628	hours	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53309:53310	1628:1628	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53301:53310	1628:1628	hours / 10	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53314:53316	1628:1628	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53300:53317	1628:1628	(char) ((hours / 10) + '0')	[]	[int:hours]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53280:53319	1628:1628	buffer.append(((char) ((hours / 10) + '0')))	[java.lang.StringBuffer:append]	[int:hours, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53333:53338	1629:1629	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53354:53358	1629:1629	hours	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53362:53363	1629:1629	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53354:53363	1629:1629	hours % 10	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53367:53369	1629:1629	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53353:53370	1629:1629	(char) ((hours % 10) + '0')	[]	[int:hours]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53333:53372	1629:1629	buffer.append(((char) ((hours % 10) + '0')))	[java.lang.StringBuffer:append]	[int:hours, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	53403:53408	1631:1631	mColon	[]	[boolean:mColon]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53429:53434	1632:1632	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53443:53445	1632:1632	':'	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53429:53447	1632:1632	buffer.append(':')	[java.lang.StringBuffer:append]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	53399:53461	1631:1633	if (mColon) {    buffer.append(':');}	[java.lang.StringBuffer:append]	[boolean:mColon, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	53488:53490	1635:1635	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53502:53507	1635:1635	offset	[]	[int:offset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53512:53513	1635:1635	60	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53517:53520	1635:1635	1000	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53511:53521	1635:1635	60 * 1000	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53502:53521	1635:1635	offset / (60 * 1000)	[]	[int:offset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53525:53526	1635:1635	60	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53530:53534	1635:1635	hours	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53525:53534	1635:1635	60 * hours	[]	[int:hours]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53502:53534	1635:1635	offset / (60 * 1000)) - (60 * hours	[]	[int:offset, int:hours]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	53488:53535	1635:1635	int minutes = (offset / (60 * 1000)) - (60 * hours)	[]	[int:offset, int:hours]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53549:53554	1636:1636	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53570:53576	1636:1636	minutes	[]	[int:minutes]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53580:53581	1636:1636	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53570:53581	1636:1636	minutes / 10	[]	[int:minutes]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53585:53587	1636:1636	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53569:53588	1636:1636	(char) ((minutes / 10) + '0')	[]	[int:minutes]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53549:53590	1636:1636	buffer.append(((char) ((minutes / 10) + '0')))	[java.lang.StringBuffer:append]	[int:minutes, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53604:53609	1637:1637	buffer	[]	[java.lang.StringBuffer:buffer]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	53625:53631	1637:1637	minutes	[]	[int:minutes]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	53635:53636	1637:1637	10	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53625:53636	1637:1637	minutes % 10	[]	[int:minutes]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	53640:53642	1637:1637	'0'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	53624:53643	1637:1637	(char) ((minutes % 10) + '0')	[]	[int:minutes]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	53604:53645	1637:1637	buffer.append(((char) ((minutes % 10) + '0')))	[java.lang.StringBuffer:append]	[int:minutes, java.lang.StringBuffer:buffer]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	53955:53957	1647:1647	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	54453:54455	1659:1659	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	54493:54501	1660:1660	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	54505:54512	1660:1660	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	54493:54513	1660:1660	mTimeZone = timeZone	[]	[java.util.TimeZone:timeZone, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	54531:54538	1661:1661	daylight	[]	[boolean:daylight]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	54559:54563	1662:1662	style	[]	[int:style]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	54568:54577	1662:1662	-2147483648	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	54559:54578	1662:1662	style |= -2147483648	[]	[int:style]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	54527:54592	1661:1663	if (daylight) {    style |= -2147483648;}	[]	[boolean:daylight, int:style]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	54606:54611	1664:1664	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	54615:54619	1664:1664	style	[]	[int:style]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	54606:54620	1664:1664	mStyle = style	[]	[int:style, int:mStyle]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	54634:54640	1665:1665	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	54644:54649	1665:1665	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	54634:54650	1665:1665	mLocale = locale	[]	[java.util.Locale:mLocale, java.util.Locale:locale]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	54720:54728	1671:1671	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	54745:54747	1672:1672	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	54781:54786	1673:1673	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	54790:54791	1673:1673	31	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	54781:54791	1673:1673	(mStyle) * 31	[]	[int:mStyle]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	54795:54801	1673:1673	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	54795:54812	1673:1673	mLocale.hashCode()	[int:hashCode]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	54781:54812	1673:1673	(mStyle) * 31) + (mLocale.hashCode()	[int:hashCode]	[java.util.Locale:mLocale, int:mStyle]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	54774:54813	1673:1673	return ((mStyle) * 31) + (mLocale.hashCode())	[int:hashCode]	[java.util.Locale:mLocale, int:mStyle]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	54883:54891	1679:1679	@java.lang.Override	[]	[]	[]	[]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	Expression	class spoon.support.reflect.code.CtThisAccessImpl	54953:54956	1681:1681	this	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	54961:54963	1681:1681	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	54953:54963	1681:1681	(this) == obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	54991:54994	1682:1682	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	54984:54995	1682:1682	return true	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	54949:55009	1681:1683	if ((this) == obj) {    return true;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	55027:55029	1684:1684	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	55042:55059	1684:1684	org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	55027:55059	1684:1684	obj instanceof org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	55127:55129	1685:1685	(org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj)	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj)]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	55080:55130	1685:1685	org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey other = ((org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj))	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj)]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55175:55183	1687:1687	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	Expression	class spoon.support.reflect.code.CtVariableReadImpl	55192:55196	1687:1687	other	[]	[org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55192:55206	1687:1687	other.mTimeZone	[]	[java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	55175:55207	1687:1687	mTimeZone.equals(other.mTimeZone)	[boolean:equals]	[java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55232:55237	1688:1688	mStyle	[]	[int:mStyle]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	Expression	class spoon.support.reflect.code.CtVariableReadImpl	55242:55246	1688:1688	other	[]	[org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55242:55253	1688:1688	other.mStyle	[]	[int:mStyle, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	55232:55253	1688:1688	(mStyle) == (other.mStyle)	[]	[int:mStyle, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	55175:55253	1687:1688	(mTimeZone.equals(other.mTimeZone)) && ((mStyle) == (other.mStyle))	[boolean:equals]	[int:mStyle, java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55278:55284	1689:1689	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	Expression	class spoon.support.reflect.code.CtVariableReadImpl	55293:55297	1689:1689	other	[]	[org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	55293:55305	1689:1689	other.mLocale	[]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	55278:55306	1689:1689	mLocale.equals(other.mLocale)	[boolean:equals]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	55175:55306	1687:1689	(mTimeZone.equals(other.mTimeZone)) && ((mStyle) == (other.mStyle))) && (mLocale.equals(other.mLocale)	[boolean:equals]	[java.util.Locale:mLocale, int:mStyle, java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	55148:55307	1686:1689	return ((mTimeZone.equals(other.mTimeZone)) && ((mStyle) == (other.mStyle))) && (mLocale.equals(other.mLocale))	[boolean:equals]	[java.util.Locale:mLocale, int:mStyle, java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	55023:55321	1684:1690	if (obj instanceof org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) {    org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey other = ((org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj));    return ((mTimeZone.equals(other.mTimeZone)) && ((mStyle) == (other.mStyle))) && (mLocale.equals(other.mLocale));}	[boolean:equals]	[java.lang.Object:obj, java.util.Locale:mLocale, java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey) (obj), int:mStyle, java.util.TimeZone:mTimeZone, org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey:other]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	55342:55346	1691:1691	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	55335:55347	1691:1691	return false	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	55993:55997	1712:1712	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56001:56004	1712:1712	obj1	[]	[java.lang.Object:obj1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	55993:56005	1712:1712	mObj1 = obj1	[]	[java.lang.Object:obj1, java.lang.Object:mObj1]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	56019:56023	1713:1713	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56027:56030	1713:1713	obj2	[]	[java.lang.Object:obj2]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	56019:56031	1713:1713	mObj2 = obj2	[]	[java.lang.Object:mObj2, java.lang.Object:obj2]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	56101:56109	1719:1719	@java.lang.Override	[]	[]	[]	[]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtThisAccessImpl	56171:56174	1721:1721	this	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56179:56181	1721:1721	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56171:56181	1721:1721	(this) == obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	56209:56212	1722:1722	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	56202:56213	1722:1722	return true	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	56167:56227	1721:1723	if ((this) == obj) {    return true;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56248:56250	1725:1725	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	56263:56266	1725:1725	org.apache.commons.lang3.time.FastDateFormat.Pair	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56247:56267	1725:1725	obj instanceof org.apache.commons.lang3.time.FastDateFormat.Pair	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	56246:56267	1725:1725	!(obj instanceof org.apache.commons.lang3.time.FastDateFormat.Pair)	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	56295:56299	1726:1726	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	56288:56300	1726:1726	return false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	56242:56314	1725:1727	if (!(obj instanceof org.apache.commons.lang3.time.FastDateFormat.Pair)) {    return false;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56346:56348	1729:1729	(org.apache.commons.lang3.time.FastDateFormat.Pair) (obj)	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat.Pair) (obj)]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	56329:56349	1729:1729	org.apache.commons.lang3.time.FastDateFormat.Pair key = ((org.apache.commons.lang3.time.FastDateFormat.Pair) (obj))	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat.Pair) (obj)]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56388:56392	1732:1732	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56397:56400	1732:1732	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56388:56400	1732:1732	(mObj1) == null	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56421:56423	1733:1733	key	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56421:56429	1733:1733	key.mObj1	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56434:56437	1733:1733	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56421:56437	1733:1733	(key.mObj1) == null	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56441:56445	1733:1733	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56454:56456	1733:1733	key	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56454:56462	1733:1733	key.mObj1	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	56441:56463	1733:1733	mObj1.equals(key.mObj1)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtConditionalImpl	56387:56464	1732:1733	(mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56486:56490	1734:1734	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56495:56498	1734:1734	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56486:56498	1734:1734	(mObj2) == null	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56519:56521	1735:1735	key	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56519:56527	1735:1735	key.mObj2	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56532:56535	1735:1735	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56519:56535	1735:1735	(key.mObj2) == null	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56539:56543	1735:1735	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtVariableReadImpl	56552:56554	1735:1735	key	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56552:56560	1735:1735	key.mObj2	[]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	56539:56561	1735:1735	mObj2.equals(key.mObj2)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtConditionalImpl	56485:56562	1734:1735	(mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56387:56562	1732:1735	(mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	56364:56563	1731:1735	return ((mObj1) == null ? (key.mObj1) == null : mObj1.equals(key.mObj1)) && ((mObj2) == null ? (key.mObj2) == null : mObj2.equals(key.mObj2))	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat.Pair:key, java.lang.Object:mObj2, java.lang.Object:mObj1]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	56633:56641	1741:1741	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	56658:56660	1742:1742	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56711:56715	1744:1744	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56720:56723	1744:1744	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56711:56723	1744:1744	(mObj1) == null	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	56727:56727	1744:1744	0	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56731:56735	1744:1744	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	56731:56746	1744:1744	mObj1.hashCode()	[int:hashCode]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtConditionalImpl	56710:56747	1744:1744	(mObj1) == null ? 0 : mObj1.hashCode()	[int:hashCode]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56768:56772	1745:1745	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	56777:56780	1745:1745	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56768:56780	1745:1745	(mObj2) == null	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	56784:56784	1745:1745	0	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56788:56792	1745:1745	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	56788:56803	1745:1745	mObj2.hashCode()	[int:hashCode]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtConditionalImpl	56767:56804	1745:1745	(mObj2) == null ? 0 : mObj2.hashCode()	[int:hashCode]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56710:56804	1744:1745	(mObj1) == null ? 0 : mObj1.hashCode()) + ((mObj2) == null ? 0 : mObj2.hashCode()	[int:hashCode]	[java.lang.Object:mObj2, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	56687:56805	1743:1745	return ((mObj1) == null ? 0 : mObj1.hashCode()) + ((mObj2) == null ? 0 : mObj2.hashCode())	[int:hashCode]	[java.lang.Object:mObj2, java.lang.Object:mObj1]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	56875:56883	1751:1751	@java.lang.Override	[]	[]	[]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	56939:56941	1753:1753	"["	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56945:56949	1753:1753	mObj1	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56939:56949	1753:1753	"[" + (mObj1)	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	56953:56955	1753:1753	':'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56939:56955	1753:1753	("[" + (mObj1)) + ':'	[]	[java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtFieldReadImpl	56959:56963	1753:1753	mObj2	[]	[java.lang.Object:mObj2]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56939:56963	1753:1753	(("[" + (mObj1)) + ':') + (mObj2)	[]	[java.lang.Object:mObj2, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	56967:56969	1753:1753	']'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	56939:56969	1753:1753	((("[" + (mObj1)) + ':') + (mObj2)) + ']'	[]	[java.lang.Object:mObj2, java.lang.Object:mObj1]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	56932:56970	1753:1753	return ((("[" + (mObj1)) + ':') + (mObj2)) + ']'	[]	[java.lang.Object:mObj2, java.lang.Object:mObj1]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3418:3421	89:89	long	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
long	Expression	class spoon.support.reflect.code.CtLiteralImpl	3442:3443	89:89	1L	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3536:3538	94:94	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3547:3556	94:94	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3547:3561	94:94	java.text.DateFormat.FULL	[]	[int:FULL]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3653:3655	98:98	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3664:3673	98:98	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3664:3678	98:98	java.text.DateFormat.LONG	[]	[int:LONG]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3772:3774	102:102	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3785:3794	102:102	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3785:3801	102:102	java.text.DateFormat.MEDIUM	[]	[int:MEDIUM]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3894:3896	106:106	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3906:3915	106:106	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3906:3921	106:106	java.text.DateFormat.SHORT	[]	[int:SHORT]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4159:4159	111:111	7	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashMap<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4115:4160	111:111	new java.util.HashMap<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>(7)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4273:4273	112:112	7	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4237:4274	112:112	new java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>(7)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4387:4387	113:113	7	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4351:4388	113:113	new java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>(7)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4505:4505	114:114	7	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4469:4506	114:114	new java.util.HashMap<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>(7)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4606:4606	115:115	7	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashMap<java.lang.Object, java.lang.String>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4578:4607	115:115	new java.util.HashMap<java.lang.Object, java.lang.String>(7)	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	5202:5204	144:144	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	5538:5556	154:154	org.apache.commons.lang3.time.FastDateFormat.getDefaultPattern()	[java.lang.String:getDefaultPattern]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5559:5562	154:154	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5565:5568	154:154	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	5526:5569	154:154	org.apache.commons.lang3.time.FastDateFormat.getInstance(org.apache.commons.lang3.time.FastDateFormat.getDefaultPattern(), null, null)	[java.lang.String:getDefaultPattern, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5519:5570	154:154	return org.apache.commons.lang3.time.FastDateFormat.getInstance(org.apache.commons.lang3.time.FastDateFormat.getDefaultPattern(), null, null)	[java.lang.String:getDefaultPattern, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5989:5995	167:167	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5998:6001	167:167	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	6004:6007	167:167	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	5977:6008	167:167	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5970:6009	167:167	return org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.lang.String:pattern]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	6529:6535	182:182	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	6538:6545	182:182	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	6548:6551	182:182	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	6517:6552	182:182	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.TimeZone:timeZone, java.lang.String:pattern]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	6510:6553	182:182	return org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.TimeZone:timeZone, java.lang.String:pattern]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7039:7045	196:196	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	7048:7051	196:196	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7054:7059	196:196	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	7027:7060	196:196	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	7020:7061	196:196	return org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.lang.String:pattern, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7738:7744	213:213	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7747:7754	213:213	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7757:7762	213:213	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	7719:7763	213:213	new org.apache.commons.lang3.time.FastDateFormat(pattern, timeZone, locale)	[]	[java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	7690:7764	213:213	org.apache.commons.lang3.time.FastDateFormat emptyFormat = new org.apache.commons.lang3.time.FastDateFormat(pattern, timeZone, locale)	[]	[java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	7798:7811	214:214	org.apache.commons.lang3.time.FastDateFormat.cInstanceCache	[]	[java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7817:7827	214:214	emptyFormat	[]	[org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	7798:7828	214:214	org.apache.commons.lang3.time.FastDateFormat.cInstanceCache.get(emptyFormat)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache, org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	7774:7829	214:214	org.apache.commons.lang3.time.FastDateFormat format = org.apache.commons.lang3.time.FastDateFormat.cInstanceCache.get(emptyFormat)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache, org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7843:7848	215:215	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	7853:7856	215:215	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	7843:7856	215:215	format == null	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	7873:7878	216:216	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7882:7892	216:216	emptyFormat	[]	[org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	7873:7893	216:216	format = emptyFormat	[]	[org.apache.commons.lang3.time.FastDateFormat:format, org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7907:7912	217:217	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	7907:7920	217:217	format.init()	[void:init]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	7975:7988	218:218	org.apache.commons.lang3.time.FastDateFormat.cInstanceCache	[]	[java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	7994:7999	218:218	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	8002:8007	218:218	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	7975:8009	218:218	org.apache.commons.lang3.time.FastDateFormat.cInstanceCache.put(format, format)	[org.apache.commons.lang3.time.FastDateFormat:put]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	7839:8035	215:219	if (format == null) {    format = emptyFormat;    format.init();    org.apache.commons.lang3.time.FastDateFormat.cInstanceCache.put(format, format);}	[void:init, org.apache.commons.lang3.time.FastDateFormat:put]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.Map<org.apache.commons.lang3.time.FastDateFormat, org.apache.commons.lang3.time.FastDateFormat>:cInstanceCache, org.apache.commons.lang3.time.FastDateFormat:emptyFormat]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	8052:8057	220:220	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	8045:8058	220:220	return format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	8554:8556	234:234	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	8598:8602	235:235	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	8605:8608	235:235	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	8611:8614	235:235	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	8582:8615	235:235	org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	8575:8616	235:235	return org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	9097:9099	249:249	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	9156:9160	250:250	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	9163:9166	250:250	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	9169:9174	250:250	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	9140:9175	250:250	org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	9133:9176	250:250	return org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	9684:9686	265:265	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	9747:9751	266:266	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	9754:9761	266:266	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	9764:9767	266:266	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	9731:9768	266:266	org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style, java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	9724:9769	266:266	return org.apache.commons.lang3.time.FastDateFormat.getDateInstance(style, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateInstance]	[int:style, java.util.TimeZone:timeZone]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	10320:10322	280:280	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	10388:10394	281:281	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10404:10408	281:281	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer	Expression	class spoon.support.reflect.code.CtInvocationImpl	10388:10409	281:281	java.lang.Integer.valueOf(style)	[java.lang.Integer:valueOf]	[int:style]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	10375:10410	281:281	java.lang.Object key = java.lang.Integer.valueOf(style)	[java.lang.Integer:valueOf]	[int:style]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10424:10431	282:282	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	10436:10439	282:282	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	10424:10439	282:282	timeZone != null	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	10456:10458	283:283	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10471:10473	283:283	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10476:10483	283:283	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	10462:10484	283:283	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	10456:10485	283:283	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	10420:10495	282:284	if (timeZone != null) {    key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone);}	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10510:10515	286:286	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	10520:10523	286:286	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	10510:10523	286:286	locale == null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	10540:10545	287:287	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	10549:10554	287:287	java.util.Locale	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtInvocationImpl	10549:10567	287:287	java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	10540:10568	287:287	locale = java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	10506:10578	286:288	if (locale == null) {    locale = java.util.Locale.getDefault();}	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	10589:10591	290:290	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10604:10606	290:290	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10609:10614	290:290	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	10595:10615	290:290	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	10589:10616	290:290	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	10651:10668	292:292	org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10674:10676	292:292	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	10651:10677	292:292	org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache, java.lang.Object:key]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	10627:10678	292:292	org.apache.commons.lang3.time.FastDateFormat format = org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10692:10697	293:293	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	10702:10705	293:293	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	10692:10705	293:293	format == null	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	10792:10801	295:295	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10819:10823	295:295	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10826:10831	295:295	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	10792:10832	295:295	(java.text.SimpleDateFormat) (java.text.DateFormat.getDateInstance(style, locale))	[]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	10744:10833	295:295	java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateInstance(style, locale)))	[]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.SimpleDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10868:10876	296:296	formatter	[]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	10868:10888	296:296	formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	10851:10889	296:296	java.lang.String pattern = formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	10907:10912	297:297	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10928:10934	297:297	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10937:10944	297:297	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10947:10952	297:297	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	10916:10953	297:297	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	10907:10954	297:297	format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	10972:10989	298:298	org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	10995:10997	298:298	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	11000:11005	298:298	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	10972:11007	298:298	org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache.put(key, format)	[org.apache.commons.lang3.time.FastDateFormat:put]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache, java.lang.Object:key]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	11123:11152	301:301	"No date pattern for locale: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	11156:11161	301:301	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	11123:11161	301:301	"No date pattern for locale: " + locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	11094:11162	301:301	new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	11088:11163	301:301	throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	10722:11177	294:302	try {    java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateInstance(style, locale)));    java.lang.String pattern = formatter.toPattern();    format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);    org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache.put(key, format);} catch (java.lang.ClassCastException ex) {    throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale));}	[java.lang.String:toPattern, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.text.SimpleDateFormat:formatter, int:style, org.apache.commons.lang3.time.FastDateFormat:format, java.util.TimeZone:timeZone, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	10688:11187	293:303	if (format == null) {    try {        java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateInstance(style, locale)));        java.lang.String pattern = formatter.toPattern();        format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);        org.apache.commons.lang3.time.FastDateFormat.cDateInstanceCache.put(key, format);    } catch (java.lang.ClassCastException ex) {        throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale));    }}	[java.lang.String:toPattern, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.text.SimpleDateFormat:formatter, org.apache.commons.lang3.time.FastDateFormat:format, int:style, java.util.TimeZone:timeZone, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateInstanceCache, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	11204:11209	304:304	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	11197:11210	304:304	return format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	11706:11708	318:318	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	11750:11754	319:319	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	11757:11760	319:319	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	11763:11766	319:319	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	11734:11767	319:319	org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	11727:11768	319:319	return org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	12249:12251	333:333	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	12308:12312	334:334	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	12315:12318	334:334	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	12321:12326	334:334	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	12292:12327	334:334	org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	12285:12328	334:334	return org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	12840:12842	349:349	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	12903:12907	350:350	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	12910:12917	350:350	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	12920:12923	350:350	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	12887:12924	350:350	org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style, java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	12880:12925	350:350	return org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(style, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getTimeInstance]	[int:style, java.util.TimeZone:timeZone]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	13481:13483	365:365	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	13549:13555	366:366	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13565:13569	366:366	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer	Expression	class spoon.support.reflect.code.CtInvocationImpl	13549:13570	366:366	java.lang.Integer.valueOf(style)	[java.lang.Integer:valueOf]	[int:style]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	13536:13571	366:366	java.lang.Object key = java.lang.Integer.valueOf(style)	[java.lang.Integer:valueOf]	[int:style]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13585:13592	367:367	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	13597:13600	367:367	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	13585:13600	367:367	timeZone != null	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	13617:13619	368:368	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13632:13634	368:368	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13637:13644	368:368	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	13623:13645	368:368	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	13617:13646	368:368	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	13581:13656	367:369	if (timeZone != null) {    key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone);}	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13670:13675	370:370	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	13680:13683	370:370	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	13670:13683	370:370	locale != null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	13700:13702	371:371	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13715:13717	371:371	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13720:13725	371:371	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	13706:13726	371:371	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	13700:13727	371:371	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	13666:13737	370:372	if (locale != null) {    key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale);}	[]	[java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	13772:13789	374:374	org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13795:13797	374:374	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	13772:13798	374:374	org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache, java.lang.Object:key]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	13748:13799	374:374	org.apache.commons.lang3.time.FastDateFormat format = org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13813:13818	375:375	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	13823:13826	375:375	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	13813:13826	375:375	format == null	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	13847:13852	376:376	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	13857:13860	376:376	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	13847:13860	376:376	locale == null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	13881:13886	377:377	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	13890:13895	377:377	java.util.Locale	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtInvocationImpl	13890:13908	377:377	java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	13881:13909	377:377	locale = java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	13843:13923	376:378	if (locale == null) {    locale = java.util.Locale.getDefault();}	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	14008:14017	381:381	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14035:14039	381:381	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14042:14047	381:381	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	14008:14048	381:381	(java.text.SimpleDateFormat) (java.text.DateFormat.getTimeInstance(style, locale))	[]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	13960:14049	381:381	java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getTimeInstance(style, locale)))	[]	[int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.SimpleDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14084:14092	382:382	formatter	[]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	14084:14104	382:382	formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	14067:14105	382:382	java.lang.String pattern = formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	14123:14128	383:383	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14144:14150	383:383	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14153:14160	383:383	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14163:14168	383:383	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	14132:14169	383:383	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	14123:14170	383:383	format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	14188:14205	384:384	org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14211:14213	384:384	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14216:14221	384:384	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	14188:14223	384:384	org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache.put(key, format)	[org.apache.commons.lang3.time.FastDateFormat:put]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache, java.lang.Object:key]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	14335:14364	387:387	"No date pattern for locale: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14368:14373	387:387	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	14335:14373	387:387	"No date pattern for locale: " + locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	14306:14374	387:387	new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	14300:14375	387:387	throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	13938:14389	380:388	try {    java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getTimeInstance(style, locale)));    java.lang.String pattern = formatter.toPattern();    format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);    org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache.put(key, format);} catch (java.lang.ClassCastException ex) {    throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale));}	[java.lang.String:toPattern, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.text.SimpleDateFormat:formatter, int:style, org.apache.commons.lang3.time.FastDateFormat:format, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache, java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	13809:14399	375:389	if (format == null) {    if (locale == null) {        locale = java.util.Locale.getDefault();    }    try {        java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getTimeInstance(style, locale)));        java.lang.String pattern = formatter.toPattern();        format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);        org.apache.commons.lang3.time.FastDateFormat.cTimeInstanceCache.put(key, format);    } catch (java.lang.ClassCastException ex) {        throw new java.lang.IllegalArgumentException(("No date pattern for locale: " + locale));    }}	[java.lang.String:toPattern, java.util.Locale:getDefault, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.text.SimpleDateFormat:formatter, org.apache.commons.lang3.time.FastDateFormat:format, int:style, java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cTimeInstanceCache, java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	14416:14421	390:390	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	14409:14422	390:390	return format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	15020:15022	406:406	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	15035:15037	406:406	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	15087:15095	407:407	dateStyle	[]	[int:dateStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	15098:15106	407:407	timeStyle	[]	[int:timeStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	15109:15112	407:407	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	15115:15118	407:407	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	15067:15119	407:407	org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, int:dateStyle]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	15060:15120	407:407	return org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, null, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, int:dateStyle]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	15707:15709	423:423	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	15722:15724	423:423	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	15789:15797	424:424	dateStyle	[]	[int:dateStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	15800:15808	424:424	timeStyle	[]	[int:timeStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	15811:15814	424:424	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	15817:15822	424:424	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	15769:15823	424:424	org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, int:dateStyle, java.util.Locale:locale]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	15762:15824	424:424	return org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, null, locale)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, int:dateStyle, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	16438:16440	441:441	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	16453:16455	441:441	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	16524:16532	442:442	dateStyle	[]	[int:dateStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	16535:16543	442:442	timeStyle	[]	[int:timeStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	16546:16553	442:442	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	16556:16559	442:442	null	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	16504:16560	442:442	org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, java.util.TimeZone:timeZone, int:dateStyle]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	16497:16561	442:442	return org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, timeZone, null)	[org.apache.commons.lang3.time.FastDateFormat:getDateTimeInstance]	[int:timeStyle, java.util.TimeZone:timeZone, int:dateStyle]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	17205:17207	457:457	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	17220:17222	457:457	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	17314:17320	460:460	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17330:17338	460:460	dateStyle	[]	[int:dateStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer	Expression	class spoon.support.reflect.code.CtInvocationImpl	17314:17339	460:460	java.lang.Integer.valueOf(dateStyle)	[java.lang.Integer:valueOf]	[int:dateStyle]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	17342:17348	460:460	java.lang.Integer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17358:17366	460:460	timeStyle	[]	[int:timeStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer	Expression	class spoon.support.reflect.code.CtInvocationImpl	17342:17367	460:460	java.lang.Integer.valueOf(timeStyle)	[java.lang.Integer:valueOf]	[int:timeStyle]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	17305:17368	460:460	new org.apache.commons.lang3.time.FastDateFormat.Pair(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle))	[java.lang.Integer:valueOf]	[int:timeStyle, int:dateStyle]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	17292:17369	460:460	java.lang.Object key = new org.apache.commons.lang3.time.FastDateFormat.Pair(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle))	[java.lang.Integer:valueOf]	[int:timeStyle, int:dateStyle]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17383:17390	461:461	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	17395:17398	461:461	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	17383:17398	461:461	timeZone != null	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	17415:17417	462:462	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17430:17432	462:462	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17435:17442	462:462	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	17421:17443	462:462	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	17415:17444	462:462	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone)	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	17379:17454	461:463	if (timeZone != null) {    key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, timeZone);}	[]	[java.util.TimeZone:timeZone, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17468:17473	464:464	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	17478:17481	464:464	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	17468:17481	464:464	locale == null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	17498:17503	465:465	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	17507:17512	465:465	java.util.Locale	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtInvocationImpl	17507:17525	465:465	java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	17498:17526	465:465	locale = java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	17464:17536	464:466	if (locale == null) {    locale = java.util.Locale.getDefault();}	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	17546:17548	467:467	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17561:17563	467:467	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17566:17571	467:467	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Pair	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	17552:17572	467:467	new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	17546:17573	467:467	key = new org.apache.commons.lang3.time.FastDateFormat.Pair(key, locale)	[]	[java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	17608:17629	469:469	org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17635:17637	469:469	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	17608:17638	469:469	org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache, java.lang.Object:key]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	17584:17639	469:469	org.apache.commons.lang3.time.FastDateFormat format = org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache.get(key)	[org.apache.commons.lang3.time.FastDateFormat:get]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17653:17658	470:470	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	17663:17666	470:470	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	17653:17666	470:470	format == null	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	17753:17762	472:472	java.text.DateFormat	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17784:17792	472:472	dateStyle	[]	[int:dateStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17795:17803	472:472	timeStyle	[]	[int:timeStyle]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17830:17835	473:473	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	17753:17836	472:473	(java.text.SimpleDateFormat) (java.text.DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale))	[]	[int:timeStyle, int:dateStyle, java.util.Locale:locale]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	17705:17837	472:473	java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale)))	[]	[int:timeStyle, int:dateStyle, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.SimpleDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17872:17880	474:474	formatter	[]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	17872:17892	474:474	formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	17855:17893	474:474	java.lang.String pattern = formatter.toPattern()	[java.lang.String:toPattern]	[java.text.SimpleDateFormat:formatter]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	17911:17916	475:475	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17932:17938	475:475	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17941:17948	475:475	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	17951:17956	475:475	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	17920:17957	475:475	org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	17911:17958	475:475	format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale)	[org.apache.commons.lang3.time.FastDateFormat:getInstance]	[org.apache.commons.lang3.time.FastDateFormat:format, java.util.TimeZone:timeZone, java.lang.String:pattern, java.util.Locale:locale]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	17976:17997	476:476	org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache	[]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18003:18005	476:476	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18008:18013	476:476	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtInvocationImpl	17976:18015	476:476	org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache.put(key, format)	[org.apache.commons.lang3.time.FastDateFormat:put]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache, org.apache.commons.lang3.time.FastDateFormat:format, java.lang.Object:key]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	18115:18149	479:479	"No date time pattern for locale: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18153:18158	479:479	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	18115:18158	479:479	"No date time pattern for locale: " + locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	18086:18159	479:479	new java.lang.IllegalArgumentException(("No date time pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	18080:18160	479:479	throw new java.lang.IllegalArgumentException(("No date time pattern for locale: " + locale))	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	17683:18174	471:480	try {    java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale)));    java.lang.String pattern = formatter.toPattern();    format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);    org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache.put(key, format);} catch (java.lang.ClassCastException ex) {    throw new java.lang.IllegalArgumentException(("No date time pattern for locale: " + locale));}	[java.lang.String:toPattern, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache, java.text.SimpleDateFormat:formatter, org.apache.commons.lang3.time.FastDateFormat:format, int:timeStyle, java.util.TimeZone:timeZone, int:dateStyle, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	17649:18184	470:481	if (format == null) {    try {        java.text.SimpleDateFormat formatter = ((java.text.SimpleDateFormat) (java.text.DateFormat.getDateTimeInstance(dateStyle, timeStyle, locale)));        java.lang.String pattern = formatter.toPattern();        format = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);        org.apache.commons.lang3.time.FastDateFormat.cDateTimeInstanceCache.put(key, format);    } catch (java.lang.ClassCastException ex) {        throw new java.lang.IllegalArgumentException(("No date time pattern for locale: " + locale));    }}	[java.lang.String:toPattern, org.apache.commons.lang3.time.FastDateFormat:put, org.apache.commons.lang3.time.FastDateFormat:getInstance]	[java.util.Map<java.lang.Object, org.apache.commons.lang3.time.FastDateFormat>:cDateTimeInstanceCache, java.text.SimpleDateFormat:formatter, org.apache.commons.lang3.time.FastDateFormat:format, int:timeStyle, java.util.TimeZone:timeZone, int:dateStyle, java.lang.String:pattern, java.util.Locale:locale, java.lang.Object:key]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18201:18206	482:482	format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	18194:18207	482:482	return format	[]	[org.apache.commons.lang3.time.FastDateFormat:format]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	18755:18757	496:496	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18827:18828	497:497	tz	[]	[java.util.TimeZone:tz]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18831:18838	497:497	daylight	[]	[boolean:daylight]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18841:18845	497:497	style	[]	[int:style]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18848:18853	497:497	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	18804:18854	497:497	new org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey(tz, daylight, style, locale)	[]	[boolean:daylight, java.util.TimeZone:tz, int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	18791:18855	497:497	java.lang.Object key = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneDisplayKey(tz, daylight, style, locale)	[]	[boolean:daylight, java.util.TimeZone:tz, int:style, java.util.Locale:locale]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, java.lang.String>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	18880:18900	498:498	org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache	[]	[java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18906:18908	498:498	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	18880:18909	498:498	org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache.get(key)	[java.lang.String:get]	[java.lang.Object:key, java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	18865:18910	498:498	java.lang.String value = org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache.get(key)	[java.lang.String:get]	[java.lang.Object:key, java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	18924:18928	499:499	value	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	18933:18936	499:499	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	18924:18936	499:499	value == null	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	19016:19020	501:501	value	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19024:19025	501:501	tz	[]	[java.util.TimeZone:tz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19042:19049	501:501	daylight	[]	[boolean:daylight]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19052:19056	501:501	style	[]	[int:style]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19059:19064	501:501	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	19024:19065	501:501	tz.getDisplayName(daylight, style, locale)	[java.lang.String:getDisplayName]	[boolean:daylight, java.util.TimeZone:tz, int:style, java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	19016:19066	501:501	value = tz.getDisplayName(daylight, style, locale)	[java.lang.String:getDisplayName]	[boolean:daylight, java.util.TimeZone:tz, int:style, java.lang.String:value, java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Map<java.lang.Object, java.lang.String>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	19080:19100	502:502	org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache	[]	[java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19106:19108	502:502	key	[]	[java.lang.Object:key]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19111:19115	502:502	value	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	19080:19117	502:502	org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache.put(key, value)	[java.lang.String:put]	[java.lang.String:value, java.lang.Object:key, java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	18920:19127	499:503	if (value == null) {    value = tz.getDisplayName(daylight, style, locale);    org.apache.commons.lang3.time.FastDateFormat.cTimeZoneDisplayCache.put(key, value);}	[java.lang.String:getDisplayName, java.lang.String:put]	[boolean:daylight, java.util.TimeZone:tz, int:style, java.lang.String:value, java.util.Locale:locale, java.lang.Object:key, java.util.Map<java.lang.Object, java.lang.String>:cTimeZoneDisplayCache]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	19144:19148	504:504	value	[]	[java.lang.String:value]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	19137:19149	504:504	return value	[]	[java.lang.String:value]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	19330:19344	513:513	org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern	[]	[java.lang.String:cDefaultPattern]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	19349:19352	513:513	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	19330:19352	513:513	(org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern) == null	[]	[java.lang.String:cDefaultPattern]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	19369:19383	514:514	org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern	[]	[java.lang.String:cDefaultPattern]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.SimpleDateFormat	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	19387:19408	514:514	new java.text.SimpleDateFormat()	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	19387:19420	514:514	new java.text.SimpleDateFormat().toPattern()	[java.lang.String:SimpleDateFormat]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	19369:19421	514:514	org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern = new java.text.SimpleDateFormat().toPattern()	[java.lang.String:SimpleDateFormat]	[java.lang.String:cDefaultPattern]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	19326:19431	513:515	if ((org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern) == null) {    org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern = new java.text.SimpleDateFormat().toPattern();}	[java.lang.String:SimpleDateFormat]	[java.lang.String:cDefaultPattern]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	19448:19462	516:516	org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern	[]	[java.lang.String:cDefaultPattern]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	19441:19463	516:516	return org.apache.commons.lang3.time.FastDateFormat.cDefaultPattern	[]	[java.lang.String:cDefaultPattern]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20166:20172	536:536	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	20177:20180	536:536	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20166:20180	536:536	pattern == null	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	20232:20261	537:537	"The pattern must not be null"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	20203:20262	537:537	new java.lang.IllegalArgumentException("The pattern must not be null")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	20197:20263	537:537	throw new java.lang.IllegalArgumentException("The pattern must not be null")	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	20162:20273	536:538	if (pattern == null) {    throw new java.lang.IllegalArgumentException("The pattern must not be null");}	[]	[java.lang.String:pattern]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20283:20290	539:539	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20294:20300	539:539	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20283:20301	539:539	mPattern = pattern	[]	[java.lang.String:mPattern, java.lang.String:pattern]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20320:20334	541:541	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20339:20346	541:541	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	20351:20354	541:541	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20338:20355	541:541	timeZone != null	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20320:20356	541:541	mTimeZoneForced = timeZone != null	[]	[boolean:mTimeZoneForced, java.util.TimeZone:timeZone]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20370:20377	542:542	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	20382:20385	542:542	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20370:20385	542:542	timeZone == null	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	20402:20409	543:543	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	20413:20420	543:543	java.util.TimeZone	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtInvocationImpl	20413:20433	543:543	java.util.TimeZone.getDefault()	[java.util.TimeZone:getDefault]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20402:20434	543:543	timeZone = java.util.TimeZone.getDefault()	[java.util.TimeZone:getDefault]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	20366:20444	542:544	if (timeZone == null) {    timeZone = java.util.TimeZone.getDefault();}	[java.util.TimeZone:getDefault]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20454:20462	545:545	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20466:20473	545:545	timeZone	[]	[java.util.TimeZone:timeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20454:20474	545:545	mTimeZone = timeZone	[]	[java.util.TimeZone:timeZone, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20493:20505	547:547	mLocaleForced	[]	[boolean:mLocaleForced]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20510:20515	547:547	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	20520:20523	547:547	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20509:20524	547:547	locale != null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20493:20525	547:547	mLocaleForced = locale != null	[]	[java.util.Locale:locale, boolean:mLocaleForced]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20539:20544	548:548	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	20549:20552	548:548	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20539:20552	548:548	locale == null	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	20569:20574	549:549	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	20578:20583	549:549	java.util.Locale	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtInvocationImpl	20578:20596	549:549	java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20569:20597	549:549	locale = java.util.Locale.getDefault()	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	20535:20607	548:550	if (locale == null) {    locale = java.util.Locale.getDefault();}	[java.util.Locale:getDefault]	[java.util.Locale:locale]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20617:20623	551:551	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20627:20632	551:551	locale	[]	[java.util.Locale:locale]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20617:20633	551:551	mLocale = locale	[]	[java.util.Locale:mLocale, java.util.Locale:locale]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtInvocationImpl	20771:20784	558:558	parsePattern()	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:parsePattern]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	20748:20785	558:558	java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule> rulesList = parsePattern()	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:parsePattern]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20795:20800	559:559	mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20804:20812	559:559	rulesList	[]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20831:20839	559:559	rulesList	[]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	20831:20846	559:559	rulesList.size()	[int:size]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	20822:20847	559:559	new org.apache.commons.lang3.time.FastDateFormat.Rule[rulesList.size()]	[int:size]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	20804:20848	559:559	rulesList.toArray(new org.apache.commons.lang3.time.FastDateFormat.Rule[rulesList.size()])	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:toArray, int:size]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20795:20849	559:559	mRules = rulesList.toArray(new org.apache.commons.lang3.time.FastDateFormat.Rule[rulesList.size()])	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:toArray, int:size]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rulesList]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	20860:20862	561:561	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	20870:20870	561:561	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	20860:20871	561:561	int len = 0	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	20886:20888	562:562	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	20892:20897	562:562	mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	20892:20904	562:562	mRules.length	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:length]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	20886:20904	562:562	int i = mRules.length	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:length]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	20909:20909	562:562	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	20907:20909	562:562	--i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	20914:20914	562:562	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	20907:20914	562:562	(--i) >= 0	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	20933:20935	563:563	len	[]	[int:len]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	20940:20945	563:563	mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	20947:20947	563:563	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtArrayReadImpl	20940:20948	563:563	mRules[i]	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	20940:20965	563:563	mRules[i].estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:i]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	20933:20966	563:563	len += mRules[i].estimateLength()	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:i, int:len]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	20881:20976	562:564	for (int i = mRules.length; (--i) >= 0;) {    len += mRules[i].estimateLength();}	[int:estimateLength]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:length, int:i, int:len]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	20987:21004	566:566	mMaxLengthEstimate	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21008:21010	566:566	len	[]	[int:len]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	20987:21011	566:566	mMaxLengthEstimate = len	[]	[int:mMaxLengthEstimate, int:len]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	21415:21421	578:578	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	21393:21422	578:578	new java.text.DateFormatSymbols(mLocale)	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21365:21423	578:578	java.text.DateFormatSymbols symbols = new java.text.DateFormatSymbols(mLocale)	[]	[java.util.Locale:mLocale]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	21452:21472	579:579	new java.util.ArrayList<org.apache.commons.lang3.time.FastDateFormat.Rule>()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21433:21473	579:579	java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule> rules = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateFormat.Rule>()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21500:21506	581:581	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21500:21516	581:581	symbols.getEras()	[java.lang.String[]:getEras]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21484:21517	581:581	java.lang.String[] ERAs = symbols.getEras()	[java.lang.String[]:getEras]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21545:21551	582:582	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21545:21563	582:582	symbols.getMonths()	[java.lang.String[]:getMonths]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21527:21564	582:582	java.lang.String[] months = symbols.getMonths()	[java.lang.String[]:getMonths]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21597:21603	583:583	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21597:21620	583:583	symbols.getShortMonths()	[java.lang.String[]:getShortMonths]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21574:21621	583:583	java.lang.String[] shortMonths = symbols.getShortMonths()	[java.lang.String[]:getShortMonths]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21651:21657	584:584	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21651:21671	584:584	symbols.getWeekdays()	[java.lang.String[]:getWeekdays]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21631:21672	584:584	java.lang.String[] weekdays = symbols.getWeekdays()	[java.lang.String[]:getWeekdays]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21707:21713	585:585	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21707:21732	585:585	symbols.getShortWeekdays()	[java.lang.String[]:getShortWeekdays]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21682:21733	585:585	java.lang.String[] shortWeekdays = symbols.getShortWeekdays()	[java.lang.String[]:getShortWeekdays]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.DateFormatSymbols	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21766:21772	586:586	symbols	[]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	21766:21789	586:586	symbols.getAmPmStrings()	[java.lang.String[]:getAmPmStrings]	[java.text.DateFormatSymbols:symbols]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21743:21790	586:586	java.lang.String[] AmPmStrings = symbols.getAmPmStrings()	[java.lang.String[]:getAmPmStrings]	[java.text.DateFormatSymbols:symbols]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	21801:21803	588:588	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	21814:21821	588:588	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	21814:21830	588:588	mPattern.length()	[int:length]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21801:21831	588:588	int length = mPattern.length()	[int:length]	[java.lang.String:mPattern]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	21862:21864	589:589	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	21866:21866	589:589	1	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	21858:21867	589:589	new int[1]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21841:21868	589:589	int[] indexRef = new int[1]	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	21884:21886	591:591	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	21892:21892	591:591	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21884:21892	591:591	int i = 0	[]	[]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21895:21895	591:591	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21899:21904	591:591	length	[]	[int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	21895:21904	591:591	i < length	[]	[int:length, int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	21907:21907	591:591	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	21907:21909	591:591	i++	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21926:21933	592:592	indexRef	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	21935:21935	592:592	0	[]	[]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtArrayWriteImpl	21926:21936	592:592	indexRef[0]	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21940:21940	592:592	i	[]	[int:i]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	21926:21941	592:592	indexRef[0] = i	[]	[int:i, int[]:indexRef]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	21981:21988	593:593	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	21991:21998	593:593	indexRef	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	21970:21999	593:593	parseToken(mPattern, indexRef)	[java.lang.String:parseToken]	[java.lang.String:mPattern, int[]:indexRef]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	21955:22000	593:593	java.lang.String token = parseToken(mPattern, indexRef)	[java.lang.String:parseToken]	[java.lang.String:mPattern, int[]:indexRef]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22014:22014	594:594	i	[]	[int:i]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22018:22025	594:594	indexRef	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22027:22027	594:594	0	[]	[]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtArrayReadImpl	22018:22028	594:594	indexRef[0]	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22014:22029	594:594	i = indexRef[0]	[]	[int:i, int[]:indexRef]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	22044:22046	596:596	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22059:22063	596:596	token	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	22059:22072	596:596	token.length()	[int:length]	[java.lang.String:token]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	22044:22073	596:596	int tokenLen = token.length()	[int:length]	[java.lang.String:token]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22091:22098	597:597	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22103:22103	597:597	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	22091:22103	597:597	tokenLen == 0	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	22124:22129	598:598	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	22087:22143	597:599	if (tokenLen == 0) {    break;}	[]	[int:tokenLen]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	22158:22167	601:601	org.apache.commons.lang3.time.FastDateFormat.Rule rule	[]	[]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22190:22194	602:602	token	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22203:22203	602:602	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	22190:22204	602:602	token.charAt(0)	[char:charAt]	[java.lang.String:token]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	22181:22205	602:602	char c = token.charAt(0)	[char:charAt]	[java.lang.String:token]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22228:22228	604:604	c	[]	[char:c]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	22250:22252	605:605	'G'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22296:22299	606:606	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22317:22324	606:606	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22317:22328	606:606	java.util.Calendar.ERA	[]	[int:ERA]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22331:22334	606:606	ERAs	[]	[java.lang.String[]:ERAs]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TextField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	22303:22335	606:606	new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.ERA, ERAs)	[]	[java.lang.String[]:ERAs, int:ERA]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22296:22336	606:606	rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.ERA, ERAs)	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.lang.String[]:ERAs, int:ERA]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	22354:22359	607:607	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	22245:22252	605:605	case 'G' :    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.ERA, ERAs);    break;	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.lang.String[]:ERAs, int:ERA]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	22378:22380	608:608	'y'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22420:22427	609:609	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22432:22432	609:609	4	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	22420:22432	609:609	tokenLen >= 4	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22457:22460	610:610	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22481:22488	610:610	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22481:22493	610:610	java.util.Calendar.YEAR	[]	[int:YEAR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22496:22503	610:610	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	22464:22504	610:610	selectNumberRule(java.util.Calendar.YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:YEAR, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22457:22505	610:610	rule = selectNumberRule(java.util.Calendar.YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:YEAR, int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22552:22555	612:612	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22559:22575	612:612	org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22559:22584	612:612	org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22552:22585	612:612	rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	22416:22603	609:613	if (tokenLen >= 4) {    rule = selectNumberRule(java.util.Calendar.YEAR, tokenLen);}else {    rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE;}	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE, int:YEAR, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	22621:22626	614:614	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	22373:22380	608:608	case 'y' :    if (tokenLen >= 4) {        rule = selectNumberRule(java.util.Calendar.YEAR, tokenLen);    }else {        rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE;    }    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE, int:YEAR, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	22645:22647	615:615	'M'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22705:22712	616:616	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22717:22717	616:616	4	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	22705:22717	616:616	tokenLen >= 4	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22742:22745	617:617	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22763:22770	617:617	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22763:22776	617:617	java.util.Calendar.MONTH	[]	[int:MONTH]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22779:22784	617:617	months	[]	[java.lang.String[]:months]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TextField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	22749:22785	617:617	new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months)	[]	[java.lang.String[]:months, int:MONTH]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22742:22786	617:617	rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months)	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.lang.String[]:months, int:MONTH]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22815:22822	618:618	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22827:22827	618:618	3	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	22815:22827	618:618	tokenLen == 3	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22852:22855	619:619	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22873:22880	619:619	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22873:22886	619:619	java.util.Calendar.MONTH	[]	[int:MONTH]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22889:22899	619:619	shortMonths	[]	[java.lang.String[]:shortMonths]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TextField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	22859:22900	619:619	new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths)	[]	[java.lang.String[]:shortMonths, int:MONTH]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22852:22901	619:619	rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths)	[]	[java.lang.String[]:shortMonths, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:MONTH]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	22930:22937	620:620	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	22942:22942	620:620	2	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	22930:22942	620:620	tokenLen == 2	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	22967:22970	621:621	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	22974:22991	621:621	org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField	Expression	class spoon.support.reflect.code.CtFieldReadImpl	22974:23000	621:621	org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	22967:23001	621:621	rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23048:23051	623:623	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23055:23072	623:623	org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23055:23081	623:623	org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23048:23082	623:623	rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	22926:23100	620:624	if (tokenLen == 2) {    rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;}else {    rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;}	[]	[org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	22811:23100	618:624	if (tokenLen == 3) {    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths);}else    if (tokenLen == 2) {        rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;    }else {        rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;    }	[]	[java.lang.String[]:shortMonths, org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, int:MONTH, int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	22701:23100	616:624	if (tokenLen >= 4) {    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months);}else    if (tokenLen == 3) {        rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths);    }else        if (tokenLen == 2) {            rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;        }else {            rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;        }    	[]	[java.lang.String[]:shortMonths, org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, java.lang.String[]:months, int:MONTH, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23118:23123	625:625	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	22640:22647	615:615	case 'M' :    if (tokenLen >= 4) {        rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months);    }else        if (tokenLen == 3) {            rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths);        }else            if (tokenLen == 2) {                rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;            }else {                rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;            }                break;	[]	[java.lang.String[]:shortMonths, org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, java.lang.String[]:months, int:MONTH, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23142:23144	626:626	'd'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23188:23191	627:627	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23212:23219	627:627	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23212:23232	627:627	java.util.Calendar.DAY_OF_MONTH	[]	[int:DAY_OF_MONTH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23235:23242	627:627	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23195:23243	627:627	selectNumberRule(java.util.Calendar.DAY_OF_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:DAY_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23188:23244	627:627	rule = selectNumberRule(java.util.Calendar.DAY_OF_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23262:23267	628:628	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23137:23144	626:626	case 'd' :    rule = selectNumberRule(java.util.Calendar.DAY_OF_MONTH, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23286:23288	629:629	'h'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23340:23343	630:630	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23384:23391	630:630	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23384:23396	630:630	java.util.Calendar.HOUR	[]	[int:HOUR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23399:23406	630:630	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23367:23407	630:630	selectNumberRule(java.util.Calendar.HOUR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TwelveHourField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	23347:23408	630:630	new org.apache.commons.lang3.time.FastDateFormat.TwelveHourField(selectNumberRule(java.util.Calendar.HOUR, tokenLen))	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23340:23409	630:630	rule = new org.apache.commons.lang3.time.FastDateFormat.TwelveHourField(selectNumberRule(java.util.Calendar.HOUR, tokenLen))	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23427:23432	631:631	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23281:23288	629:629	case 'h' :    rule = new org.apache.commons.lang3.time.FastDateFormat.TwelveHourField(selectNumberRule(java.util.Calendar.HOUR, tokenLen));    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23451:23453	632:632	'H'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23503:23506	633:633	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23527:23534	633:633	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23527:23546	633:633	java.util.Calendar.HOUR_OF_DAY	[]	[int:HOUR_OF_DAY]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23549:23556	633:633	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23510:23557	633:633	selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23503:23558	633:633	rule = selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23576:23581	634:634	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23446:23453	632:632	case 'H' :    rule = selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23600:23602	635:635	'm'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23648:23651	636:636	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23672:23679	636:636	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23672:23686	636:636	java.util.Calendar.MINUTE	[]	[int:MINUTE]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23689:23696	636:636	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23655:23697	636:636	selectNumberRule(java.util.Calendar.MINUTE, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:MINUTE, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23648:23698	636:636	rule = selectNumberRule(java.util.Calendar.MINUTE, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:MINUTE, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23716:23721	637:637	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23595:23602	635:635	case 'm' :    rule = selectNumberRule(java.util.Calendar.MINUTE, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:MINUTE, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23740:23742	638:638	's'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23790:23793	639:639	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23814:23821	639:639	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23814:23828	639:639	java.util.Calendar.SECOND	[]	[int:SECOND]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23831:23838	639:639	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23797:23839	639:639	selectNumberRule(java.util.Calendar.SECOND, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:SECOND, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23790:23840	639:639	rule = selectNumberRule(java.util.Calendar.SECOND, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:SECOND, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	23858:23863	640:640	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23735:23742	638:638	case 's' :    rule = selectNumberRule(java.util.Calendar.SECOND, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:SECOND, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	23882:23884	641:641	'S'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	23927:23930	642:642	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	23951:23958	642:642	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	23951:23970	642:642	java.util.Calendar.MILLISECOND	[]	[int:MILLISECOND]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	23973:23980	642:642	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	23934:23981	642:642	selectNumberRule(java.util.Calendar.MILLISECOND, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:MILLISECOND, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	23927:23982	642:642	rule = selectNumberRule(java.util.Calendar.MILLISECOND, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:MILLISECOND, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24000:24005	643:643	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	23877:23884	641:641	case 'S' :    rule = selectNumberRule(java.util.Calendar.MILLISECOND, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:MILLISECOND, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24024:24026	644:644	'E'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24067:24070	645:645	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24088:24095	645:645	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24088:24107	645:645	java.util.Calendar.DAY_OF_WEEK	[]	[int:DAY_OF_WEEK]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24110:24117	645:645	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	24121:24121	645:645	4	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	24110:24121	645:645	tokenLen < 4	[]	[int:tokenLen]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24125:24137	645:645	shortWeekdays	[]	[java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24141:24148	645:645	weekdays	[]	[java.lang.String[]:weekdays]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtConditionalImpl	24110:24148	645:645	tokenLen < 4 ? shortWeekdays : weekdays	[]	[java.lang.String[]:weekdays, int:tokenLen, java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TextField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	24074:24149	645:645	new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.DAY_OF_WEEK, (tokenLen < 4 ? shortWeekdays : weekdays))	[]	[java.lang.String[]:weekdays, int:DAY_OF_WEEK, int:tokenLen, java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24067:24150	645:645	rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.DAY_OF_WEEK, (tokenLen < 4 ? shortWeekdays : weekdays))	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.lang.String[]:weekdays, int:DAY_OF_WEEK, int:tokenLen, java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24168:24173	646:646	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24019:24026	644:644	case 'E' :    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.DAY_OF_WEEK, (tokenLen < 4 ? shortWeekdays : weekdays));    break;	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.lang.String[]:weekdays, int:DAY_OF_WEEK, int:tokenLen, java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24192:24194	647:647	'D'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24237:24240	648:648	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24261:24268	648:648	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24261:24280	648:648	java.util.Calendar.DAY_OF_YEAR	[]	[int:DAY_OF_YEAR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24283:24290	648:648	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	24244:24291	648:648	selectNumberRule(java.util.Calendar.DAY_OF_YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:DAY_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24237:24292	648:648	rule = selectNumberRule(java.util.Calendar.DAY_OF_YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24310:24315	649:649	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24187:24194	647:647	case 'D' :    rule = selectNumberRule(java.util.Calendar.DAY_OF_YEAR, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24334:24336	650:650	'F'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24388:24391	651:651	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24412:24419	651:651	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24412:24440	651:651	java.util.Calendar.DAY_OF_WEEK_IN_MONTH	[]	[int:DAY_OF_WEEK_IN_MONTH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24443:24450	651:651	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	24395:24451	651:651	selectNumberRule(java.util.Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:DAY_OF_WEEK_IN_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24388:24452	651:651	rule = selectNumberRule(java.util.Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_WEEK_IN_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24470:24475	652:652	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24329:24336	650:650	case 'F' :    rule = selectNumberRule(java.util.Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:DAY_OF_WEEK_IN_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24494:24496	653:653	'w'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24540:24543	654:654	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24564:24571	654:654	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24564:24584	654:654	java.util.Calendar.WEEK_OF_YEAR	[]	[int:WEEK_OF_YEAR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24587:24594	654:654	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	24547:24595	654:654	selectNumberRule(java.util.Calendar.WEEK_OF_YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:WEEK_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24540:24596	654:654	rule = selectNumberRule(java.util.Calendar.WEEK_OF_YEAR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:WEEK_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24614:24619	655:655	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24489:24496	653:653	case 'w' :    rule = selectNumberRule(java.util.Calendar.WEEK_OF_YEAR, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:WEEK_OF_YEAR, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24638:24640	656:656	'W'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24685:24688	657:657	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24709:24716	657:657	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24709:24730	657:657	java.util.Calendar.WEEK_OF_MONTH	[]	[int:WEEK_OF_MONTH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24733:24740	657:657	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	24692:24741	657:657	selectNumberRule(java.util.Calendar.WEEK_OF_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:WEEK_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24685:24742	657:657	rule = selectNumberRule(java.util.Calendar.WEEK_OF_MONTH, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:WEEK_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24760:24765	658:658	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24633:24640	656:656	case 'W' :    rule = selectNumberRule(java.util.Calendar.WEEK_OF_MONTH, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:WEEK_OF_MONTH, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24784:24786	659:659	'a'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24828:24831	660:660	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	24849:24856	660:660	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	24849:24862	660:660	java.util.Calendar.AM_PM	[]	[int:AM_PM]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	24865:24875	660:660	AmPmStrings	[]	[java.lang.String[]:AmPmStrings]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TextField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	24835:24876	660:660	new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.AM_PM, AmPmStrings)	[]	[int:AM_PM, java.lang.String[]:AmPmStrings]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24828:24877	660:660	rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.AM_PM, AmPmStrings)	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:AM_PM, java.lang.String[]:AmPmStrings]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	24895:24900	661:661	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24779:24786	659:659	case 'a' :    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.AM_PM, AmPmStrings);    break;	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:AM_PM, java.lang.String[]:AmPmStrings]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	24919:24921	662:662	'k'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	24963:24966	663:663	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25011:25018	663:663	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25011:25030	663:663	java.util.Calendar.HOUR_OF_DAY	[]	[int:HOUR_OF_DAY]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25033:25040	663:663	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	24994:25041	663:663	selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	24970:25042	663:663	new org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField(selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen))	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	24963:25043	663:663	rule = new org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField(selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen))	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	25061:25066	664:664	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	24914:24921	662:662	case 'k' :    rule = new org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField(selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen));    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	25085:25087	665:665	'K'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25131:25134	666:666	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25155:25162	666:666	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25155:25167	666:666	java.util.Calendar.HOUR	[]	[int:HOUR]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25170:25177	666:666	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.NumberRule	Expression	class spoon.support.reflect.code.CtInvocationImpl	25138:25178	666:666	selectNumberRule(java.util.Calendar.HOUR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25131:25179	666:666	rule = selectNumberRule(java.util.Calendar.HOUR, tokenLen)	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	25197:25202	667:667	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	25080:25087	665:665	case 'K' :    rule = selectNumberRule(java.util.Calendar.HOUR, tokenLen);    break;	[org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	25221:25223	668:668	'z'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25266:25273	669:669	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	25278:25278	669:669	4	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	25266:25278	669:669	tokenLen >= 4	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25303:25306	670:670	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25331:25339	670:670	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25342:25356	670:670	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25359:25365	670:670	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25368:25375	670:670	java.util.TimeZone	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25368:25380	670:670	java.util.TimeZone.LONG	[]	[int:LONG]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	25310:25381	670:670	new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG)	[]	[java.util.Locale:mLocale, boolean:mTimeZoneForced, int:LONG, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25303:25382	670:670	rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG)	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.util.Locale:mLocale, boolean:mTimeZoneForced, int:LONG, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25429:25432	672:672	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25457:25465	672:672	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25468:25482	672:672	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25485:25491	672:672	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25494:25501	672:672	java.util.TimeZone	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25494:25507	672:672	java.util.TimeZone.SHORT	[]	[int:SHORT]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	25436:25508	672:672	new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT)	[]	[java.util.Locale:mLocale, boolean:mTimeZoneForced, int:SHORT, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25429:25509	672:672	rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT)	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.util.Locale:mLocale, boolean:mTimeZoneForced, int:SHORT, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	25262:25527	669:673	if (tokenLen >= 4) {    rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG);}else {    rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT);}	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.util.Locale:mLocale, boolean:mTimeZoneForced, int:LONG, int:SHORT, java.util.TimeZone:mTimeZone, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	25545:25550	674:674	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	25216:25223	668:668	case 'z' :    if (tokenLen >= 4) {        rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG);    }else {        rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT);    }    break;	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.util.Locale:mLocale, boolean:mTimeZoneForced, int:LONG, int:SHORT, java.util.TimeZone:mTimeZone, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	25569:25571	675:675	'Z'	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25615:25622	676:676	tokenLen	[]	[int:tokenLen]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	25627:25627	676:676	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	25615:25627	676:676	tokenLen == 1	[]	[int:tokenLen]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25652:25655	677:677	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25659:25676	677:677	org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25659:25694	677:677	org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON	[]	[org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25652:25695	677:677	rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25742:25745	679:679	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	25749:25766	679:679	org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule	Expression	class spoon.support.reflect.code.CtFieldReadImpl	25749:25781	679:679	org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON	[]	[org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25742:25782	679:679	rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	25611:25800	676:680	if (tokenLen == 1) {    rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON;}else {    rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON;}	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON, int:tokenLen]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	25818:25823	681:681	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	25564:25571	675:675	case 'Z' :    if (tokenLen == 1) {        rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON;    }else {        rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON;    }    break;	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON, int:tokenLen]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	25842:25845	682:682	'\''	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25893:25897	683:683	token	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	25909:25909	683:683	1	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	25893:25910	683:683	token.substring(1)	[java.lang.String:substring]	[java.lang.String:token]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	25880:25911	683:683	java.lang.String sub = token.substring(1)	[java.lang.String:substring]	[java.lang.String:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	25933:25935	684:684	sub	[]	[java.lang.String:sub]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	25933:25944	684:684	sub.length()	[int:length]	[java.lang.String:sub]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	25949:25949	684:684	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	25933:25949	684:684	(sub.length()) == 1	[int:length]	[java.lang.String:sub]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	25974:25977	685:685	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26002:26004	685:685	sub	[]	[java.lang.String:sub]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	26013:26013	685:685	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	26002:26014	685:685	sub.charAt(0)	[char:charAt]	[java.lang.String:sub]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	25981:26015	685:685	new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0))	[char:charAt]	[java.lang.String:sub]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	25974:26016	685:685	rule = new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0))	[char:charAt]	[java.lang.String:sub, org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	26063:26066	687:687	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26088:26090	687:687	sub	[]	[java.lang.String:sub]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.apache.commons.lang3.time.FastDateFormat.StringLiteral	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	26070:26091	687:687	new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub)	[]	[java.lang.String:sub]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	26063:26092	687:687	rule = new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub)	[]	[java.lang.String:sub, org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	25929:26110	684:688	if ((sub.length()) == 1) {    rule = new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0));}else {    rule = new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub);}	[int:length, char:charAt]	[java.lang.String:sub, org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	26128:26133	689:689	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	25837:25845	682:682	case '\'' :    java.lang.String sub = token.substring(1);    if ((sub.length()) == 1) {        rule = new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0));    }else {        rule = new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub);    }    break;	[int:length, char:charAt, java.lang.String:substring]	[java.lang.String:sub, java.lang.String:token, org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	26207:26235	691:691	"Illegal pattern component: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26239:26243	691:691	token	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26207:26243	691:691	"Illegal pattern component: " + token	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	26178:26244	691:691	new java.lang.IllegalArgumentException(("Illegal pattern component: " + token))	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	26172:26245	691:691	throw new java.lang.IllegalArgumentException(("Illegal pattern component: " + token))	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	26147:26153	690:690	default :    throw new java.lang.IllegalArgumentException(("Illegal pattern component: " + token));	[]	[java.lang.String:token]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtSwitchImpl	Statement	class spoon.support.reflect.code.CtSwitchImpl	22220:26259	604:692	switch (c) {    case 'G' :        rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.ERA, ERAs);        break;    case 'y' :        if (tokenLen >= 4) {            rule = selectNumberRule(java.util.Calendar.YEAR, tokenLen);        }else {            rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE;        }        break;    case 'M' :        if (tokenLen >= 4) {            rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months);        }else            if (tokenLen == 3) {                rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths);            }else                if (tokenLen == 2) {                    rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;                }else {                    rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;                }                            break;    case 'd' :        rule = selectNumberRule(java.util.Calendar.DAY_OF_MONTH, tokenLen);        break;    case 'h' :        rule = new org.apache.commons.lang3.time.FastDateFormat.TwelveHourField(selectNumberRule(java.util.Calendar.HOUR, tokenLen));        break;    case 'H' :        rule = selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen);        break;    case 'm' :        rule = selectNumberRule(java.util.Calendar.MINUTE, tokenLen);        break;    case 's' :        rule = selectNumberRule(java.util.Calendar.SECOND, tokenLen);        break;    case 'S' :        rule = selectNumberRule(java.util.Calendar.MILLISECOND, tokenLen);        break;    case 'E' :        rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.DAY_OF_WEEK, (tokenLen < 4 ? shortWeekdays : weekdays));        break;    case 'D' :        rule = selectNumberRule(java.util.Calendar.DAY_OF_YEAR, tokenLen);        break;    case 'F' :        rule = selectNumberRule(java.util.Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);        break;    case 'w' :        rule = selectNumberRule(java.util.Calendar.WEEK_OF_YEAR, tokenLen);        break;    case 'W' :        rule = selectNumberRule(java.util.Calendar.WEEK_OF_MONTH, tokenLen);        break;    case 'a' :        rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.AM_PM, AmPmStrings);        break;    case 'k' :        rule = new org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField(selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen));        break;    case 'K' :        rule = selectNumberRule(java.util.Calendar.HOUR, tokenLen);        break;    case 'z' :        if (tokenLen >= 4) {            rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG);        }else {            rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT);        }        break;    case 'Z' :        if (tokenLen == 1) {            rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON;        }else {            rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON;        }        break;    case '\'' :        java.lang.String sub = token.substring(1);        if ((sub.length()) == 1) {            rule = new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0));        }else {            rule = new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub);        }        break;    default :        throw new java.lang.IllegalArgumentException(("Illegal pattern component: " + token));}	[int:length, char:charAt, java.lang.String:substring, org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:SECOND, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, java.util.Locale:mLocale, int:DAY_OF_MONTH, int:DAY_OF_YEAR, java.lang.String[]:months, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON, java.lang.String[]:shortMonths, java.lang.String:sub, org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, java.lang.String[]:ERAs, int:HOUR, java.lang.String[]:weekdays, org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE, int:ERA, int:YEAR, int:MILLISECOND, int:DAY_OF_WEEK_IN_MONTH, int:MINUTE, int:DAY_OF_WEEK, int:WEEK_OF_YEAR, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, int:LONG, int:AM_PM, int:MONTH, int:SHORT, java.util.TimeZone:mTimeZone, java.lang.String:token, int:WEEK_OF_MONTH, boolean:mTimeZoneForced, java.lang.String[]:AmPmStrings, char:c, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON, int:tokenLen, java.lang.String[]:shortWeekdays]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26274:26278	694:694	rules	[]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rules]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26284:26287	694:694	rule	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	26274:26289	694:694	rules.add(rule)	[boolean:add]	[org.apache.commons.lang3.time.FastDateFormat.Rule:rule, java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rules]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	21879:26299	591:695	for (int i = 0; i < length; i++) {    indexRef[0] = i;    java.lang.String token = parseToken(mPattern, indexRef);    i = indexRef[0];    int tokenLen = token.length();    if (tokenLen == 0) {        break;    }    org.apache.commons.lang3.time.FastDateFormat.Rule rule;    char c = token.charAt(0);    switch (c) {        case 'G' :            rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.ERA, ERAs);            break;        case 'y' :            if (tokenLen >= 4) {                rule = selectNumberRule(java.util.Calendar.YEAR, tokenLen);            }else {                rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField.INSTANCE;            }            break;        case 'M' :            if (tokenLen >= 4) {                rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, months);            }else                if (tokenLen == 3) {                    rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.MONTH, shortMonths);                }else                    if (tokenLen == 2) {                        rule = org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField.INSTANCE;                    }else {                        rule = org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField.INSTANCE;                    }                                        break;        case 'd' :            rule = selectNumberRule(java.util.Calendar.DAY_OF_MONTH, tokenLen);            break;        case 'h' :            rule = new org.apache.commons.lang3.time.FastDateFormat.TwelveHourField(selectNumberRule(java.util.Calendar.HOUR, tokenLen));            break;        case 'H' :            rule = selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen);            break;        case 'm' :            rule = selectNumberRule(java.util.Calendar.MINUTE, tokenLen);            break;        case 's' :            rule = selectNumberRule(java.util.Calendar.SECOND, tokenLen);            break;        case 'S' :            rule = selectNumberRule(java.util.Calendar.MILLISECOND, tokenLen);            break;        case 'E' :            rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.DAY_OF_WEEK, (tokenLen < 4 ? shortWeekdays : weekdays));            break;        case 'D' :            rule = selectNumberRule(java.util.Calendar.DAY_OF_YEAR, tokenLen);            break;        case 'F' :            rule = selectNumberRule(java.util.Calendar.DAY_OF_WEEK_IN_MONTH, tokenLen);            break;        case 'w' :            rule = selectNumberRule(java.util.Calendar.WEEK_OF_YEAR, tokenLen);            break;        case 'W' :            rule = selectNumberRule(java.util.Calendar.WEEK_OF_MONTH, tokenLen);            break;        case 'a' :            rule = new org.apache.commons.lang3.time.FastDateFormat.TextField(java.util.Calendar.AM_PM, AmPmStrings);            break;        case 'k' :            rule = new org.apache.commons.lang3.time.FastDateFormat.TwentyFourHourField(selectNumberRule(java.util.Calendar.HOUR_OF_DAY, tokenLen));            break;        case 'K' :            rule = selectNumberRule(java.util.Calendar.HOUR, tokenLen);            break;        case 'z' :            if (tokenLen >= 4) {                rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.LONG);            }else {                rule = new org.apache.commons.lang3.time.FastDateFormat.TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, java.util.TimeZone.SHORT);            }            break;        case 'Z' :            if (tokenLen == 1) {                rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_NO_COLON;            }else {                rule = org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule.INSTANCE_COLON;            }            break;        case '\'' :            java.lang.String sub = token.substring(1);            if ((sub.length()) == 1) {                rule = new org.apache.commons.lang3.time.FastDateFormat.CharacterLiteral(sub.charAt(0));            }else {                rule = new org.apache.commons.lang3.time.FastDateFormat.StringLiteral(sub);            }            break;        default :            throw new java.lang.IllegalArgumentException(("Illegal pattern component: " + token));    }    rules.add(rule);}	[int:length, java.lang.String:parseToken, char:charAt, java.lang.String:substring, boolean:add, org.apache.commons.lang3.time.FastDateFormat.NumberRule:selectNumberRule]	[int:SECOND, org.apache.commons.lang3.time.FastDateFormat.Rule:rule, int:HOUR_OF_DAY, java.util.Locale:mLocale, int:DAY_OF_MONTH, int[]:indexRef, int:DAY_OF_YEAR, java.lang.String[]:months, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_NO_COLON, java.lang.String[]:shortMonths, java.lang.String:sub, org.apache.commons.lang3.time.FastDateFormat.TwoDigitMonthField:INSTANCE, java.lang.String[]:ERAs, int:HOUR, java.lang.String[]:weekdays, org.apache.commons.lang3.time.FastDateFormat.TwoDigitYearField:INSTANCE, int:ERA, int:YEAR, int:MILLISECOND, int:DAY_OF_WEEK_IN_MONTH, int:MINUTE, int:DAY_OF_WEEK, int:WEEK_OF_YEAR, java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat.UnpaddedMonthField:INSTANCE, int:LONG, int:i, java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rules, int:AM_PM, int:MONTH, int:SHORT, java.util.TimeZone:mTimeZone, java.lang.String:token, int:length, int:WEEK_OF_MONTH, boolean:mTimeZoneForced, java.lang.String[]:AmPmStrings, char:c, org.apache.commons.lang3.time.FastDateFormat.TimeZoneNumberRule:INSTANCE_COLON, int:tokenLen, java.lang.String[]:shortWeekdays]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26317:26321	697:697	rules	[]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rules]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	26310:26322	697:697	return rules	[]	[java.util.List<org.apache.commons.lang3.time.FastDateFormat.Rule>:rules]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.declaration.CtParameterImpl]	[]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	26599:26617	708:708	new java.lang.StringBuilder()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	26579:26618	708:708	java.lang.StringBuilder buf = new java.lang.StringBuilder()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	26629:26631	710:710	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26637:26644	710:710	indexRef	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	26646:26646	710:710	0	[]	[]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtArrayReadImpl	26637:26647	710:710	indexRef[0]	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	26629:26648	710:710	int i = indexRef[0]	[]	[int[]:indexRef]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	26658:26660	711:711	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26671:26677	711:711	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	26671:26686	711:711	pattern.length()	[int:length]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	26658:26687	711:711	int length = pattern.length()	[int:length]	[java.lang.String:pattern]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26707:26713	713:713	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26722:26722	713:713	i	[]	[int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	26707:26723	713:713	pattern.charAt(i)	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	26698:26724	713:713	char c = pattern.charAt(i)	[char:charAt]	[java.lang.String:pattern, int:i]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26738:26738	714:714	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	26743:26745	714:714	'A'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26738:26745	714:714	c >= 'A'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26750:26750	714:714	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	26755:26757	714:714	'Z'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26750:26757	714:714	c <= 'Z'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26738:26757	714:714	(c >= 'A') && (c <= 'Z')	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26762:26762	714:714	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	26767:26769	714:714	'a'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26762:26769	714:714	c >= 'a'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26774:26774	714:714	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	26779:26781	714:714	'z'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26774:26781	714:714	c <= 'z'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26762:26781	714:714	(c >= 'a') && (c <= 'z')	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26738:26781	714:714	(c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')	[]	[char:c]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26894:26896	717:717	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26905:26905	717:717	c	[]	[char:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	26894:26907	717:717	buf.append(c)	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26929:26929	719:719	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	26933:26933	719:719	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26929:26933	719:719	i + 1	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26937:26942	719:719	length	[]	[int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26929:26942	719:719	(i + 1) < length	[]	[int:length, int:i]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26975:26981	720:720	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	26990:26990	720:720	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	26994:26994	720:720	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	26990:26994	720:720	i + 1	[]	[int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	26975:26995	720:720	pattern.charAt((i + 1))	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	26963:26996	720:720	char peek = pattern.charAt((i + 1))	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27018:27021	721:721	peek	[]	[char:peek]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27026:27026	721:721	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27018:27026	721:721	peek == c	[]	[char:peek, char:c]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27051:27053	722:722	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27062:27062	722:722	c	[]	[char:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	27051:27064	722:722	buf.append(c)	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27086:27086	723:723	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27086:27089	723:723	i++	[]	[int:i]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	27136:27141	725:725	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	27014:27159	721:726	if (peek == c) {    buf.append(c);    i++;}else {    break;}	[java.lang.StringBuilder:append]	[char:peek, int:i, java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtWhileImpl	Statement	class spoon.support.reflect.code.CtWhileImpl	26922:27173	719:727	while ((i + 1) < length) {    char peek = pattern.charAt((i + 1));    if (peek == c) {        buf.append(c);        i++;    }else {        break;    }} 	[char:charAt, java.lang.StringBuilder:append]	[int:length, char:peek, int:i, java.lang.String:pattern, java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27253:27255	730:730	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27264:27267	730:730	'\''	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	27253:27269	730:730	buf.append('\'')	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	27304:27308	732:732	false	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	27284:27309	732:732	boolean inLiteral = false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27331:27331	734:734	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27335:27340	734:734	length	[]	[int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27331:27340	734:734	i < length	[]	[int:length, int:i]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27343:27343	734:734	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27343:27345	734:734	i++	[]	[int:i]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27366:27366	735:735	c	[]	[char:c]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27370:27376	735:735	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27385:27385	735:735	i	[]	[int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	27370:27386	735:735	pattern.charAt(i)	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	27366:27387	735:735	c = pattern.charAt(i)	[char:charAt]	[java.lang.String:pattern, int:i, char:c]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27410:27410	737:737	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27415:27418	737:737	'\''	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27410:27418	737:737	c == '\''	[]	[char:c]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27447:27447	738:738	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	27451:27451	738:738	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27447:27451	738:738	i + 1	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27455:27460	738:738	length	[]	[int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27447:27460	738:738	(i + 1) < length	[]	[int:length, int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27465:27471	738:738	pattern	[]	[java.lang.String:pattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27480:27480	738:738	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	27484:27484	738:738	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27480:27484	738:738	i + 1	[]	[int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	27465:27485	738:738	pattern.charAt((i + 1))	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27490:27493	738:738	'\''	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27465:27493	738:738	(pattern.charAt((i + 1))) == '\''	[char:charAt]	[java.lang.String:pattern, int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27447:27493	738:738	(i + 1) < length) && ((pattern.charAt((i + 1))) == '\''	[char:charAt]	[int:length, int:i, java.lang.String:pattern]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27576:27576	740:740	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27576:27579	740:740	i++	[]	[int:i]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27605:27607	741:741	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27616:27616	741:741	c	[]	[char:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	27605:27618	741:741	buf.append(c)	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27673:27681	743:743	inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27686:27694	743:743	inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27685:27694	743:743	!inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	27673:27695	743:743	inLiteral = !inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	27443:27717	738:744	if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\'')) {    i++;    buf.append(c);}else {    inLiteral = !inLiteral;}	[char:charAt, java.lang.StringBuilder:append]	[int:length, int:i, java.lang.String:pattern, java.lang.StringBuilder:buf, char:c, boolean:inLiteral]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27747:27755	745:745	inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27746:27755	745:745	!inLiteral	[]	[boolean:inLiteral]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27786:27786	746:746	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27791:27793	746:746	'A'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27786:27793	746:746	c >= 'A'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27798:27798	746:746	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27803:27805	746:746	'Z'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27798:27805	746:746	c <= 'Z'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27786:27805	746:746	(c >= 'A') && (c <= 'Z')	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27810:27810	746:746	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27815:27817	746:746	'a'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27810:27817	746:746	c >= 'a'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27822:27822	746:746	c	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtLiteralImpl	27827:27829	746:746	'z'	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27822:27829	746:746	c <= 'z'	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27810:27829	746:746	(c >= 'a') && (c <= 'z')	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27785:27830	746:746	((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))	[]	[char:c]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	27746:27830	745:746	!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))	[]	[char:c, boolean:inLiteral]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	27855:27855	747:747	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	27855:27858	747:747	i--	[]	[int:i]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	27880:27885	748:748	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtBreakImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27932:27934	750:750	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27943:27943	750:750	c	[]	[char:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	27932:27945	750:750	buf.append(c)	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:buf, char:c]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	27742:27963	745:751	if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {    i--;    break;}else {    buf.append(c);}	[java.lang.StringBuilder:append]	[int:i, java.lang.StringBuilder:buf, char:c, boolean:inLiteral]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	27406:27963	737:751	if (c == '\'') {    if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\'')) {        i++;        buf.append(c);    }else {        inLiteral = !inLiteral;    }}else    if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {        i--;        break;    }else {        buf.append(c);    }	[char:charAt, java.lang.StringBuilder:append]	[int:length, int:i, java.lang.String:pattern, java.lang.StringBuilder:buf, char:c, boolean:inLiteral]	[spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	27324:27977	734:752	for (; i < length; i++) {    c = pattern.charAt(i);    if (c == '\'') {        if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\'')) {            i++;            buf.append(c);        }else {            inLiteral = !inLiteral;        }    }else        if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {            i--;            break;        }else {            buf.append(c);        }    }	[char:charAt, java.lang.StringBuilder:append]	[int:length, int:i, java.lang.String:pattern, java.lang.StringBuilder:buf, char:c, boolean:inLiteral]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	26734:27987	714:753	if (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {    buf.append(c);    while ((i + 1) < length) {        char peek = pattern.charAt((i + 1));        if (peek == c) {            buf.append(c);            i++;        }else {            break;        }    } }else {    buf.append('\'');    boolean inLiteral = false;    for (; i < length; i++) {        c = pattern.charAt(i);        if (c == '\'') {            if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\'')) {                i++;                buf.append(c);            }else {                inLiteral = !inLiteral;            }        }else            if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {                i--;                break;            }else {                buf.append(c);            }            }}	[char:charAt, java.lang.StringBuilder:append]	[int:length, char:peek, int:i, java.lang.String:pattern, java.lang.StringBuilder:buf, char:c, boolean:inLiteral]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	27998:28005	755:755	indexRef	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	28007:28007	755:755	0	[]	[]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtArrayWriteImpl	27998:28008	755:755	indexRef[0]	[]	[int[]:indexRef]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28012:28012	755:755	i	[]	[int:i]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	27998:28013	755:755	indexRef[0] = i	[]	[int:i, int[]:indexRef]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28030:28032	756:756	buf	[]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	28030:28043	756:756	buf.toString()	[java.lang.String:toString]	[java.lang.StringBuilder:buf]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	28023:28044	756:756	return buf.toString()	[java.lang.String:toString]	[java.lang.StringBuilder:buf]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	28328:28330	766:766	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	28339:28341	766:766	int	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28370:28376	767:767	padding	[]	[int:padding]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	28394:28394	768:768	1	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28440:28444	769:769	field	[]	[int:field]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
org.apache.commons.lang3.time.FastDateFormat.UnpaddedNumberField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	28416:28445	769:769	new org.apache.commons.lang3.time.FastDateFormat.UnpaddedNumberField(field)	[]	[int:field]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	28409:28446	769:769	return new org.apache.commons.lang3.time.FastDateFormat.UnpaddedNumberField(field)	[]	[int:field]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	28389:28394	768:768	case 1 :    return new org.apache.commons.lang3.time.FastDateFormat.UnpaddedNumberField(field);	[]	[int:field]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	28461:28461	770:770	2	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28507:28511	771:771	field	[]	[int:field]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
org.apache.commons.lang3.time.FastDateFormat.TwoDigitNumberField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	28483:28512	771:771	new org.apache.commons.lang3.time.FastDateFormat.TwoDigitNumberField(field)	[]	[int:field]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	28476:28513	771:771	return new org.apache.commons.lang3.time.FastDateFormat.TwoDigitNumberField(field)	[]	[int:field]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	28456:28461	770:770	case 2 :    return new org.apache.commons.lang3.time.FastDateFormat.TwoDigitNumberField(field);	[]	[int:field]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28573:28577	773:773	field	[]	[int:field]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.reference.CtParameterReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	28580:28586	773:773	padding	[]	[int:padding]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
org.apache.commons.lang3.time.FastDateFormat.PaddedNumberField	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	28551:28587	773:773	new org.apache.commons.lang3.time.FastDateFormat.PaddedNumberField(field, padding)	[]	[int:field, int:padding]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	28544:28588	773:773	return new org.apache.commons.lang3.time.FastDateFormat.PaddedNumberField(field, padding)	[]	[int:field, int:padding]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	28523:28529	772:772	default :    return new org.apache.commons.lang3.time.FastDateFormat.PaddedNumberField(field, padding);	[]	[int:field, int:padding]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
CtSwitchImpl	Statement	class spoon.support.reflect.code.CtSwitchImpl	28362:28598	767:774	switch (padding) {    case 1 :        return new org.apache.commons.lang3.time.FastDateFormat.UnpaddedNumberField(field);    case 2 :        return new org.apache.commons.lang3.time.FastDateFormat.TwoDigitNumberField(field);    default :        return new org.apache.commons.lang3.time.FastDateFormat.PaddedNumberField(field, padding);}	[]	[int:field, int:padding]	[]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	29019:29027	788:788	@java.lang.Override	[]	[]	[]	[]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29130:29132	790:790	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	29145:29148	790:790	java.util.Date	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	29130:29148	790:790	obj instanceof java.util.Date	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29186:29188	791:791	(java.util.Date) (obj)	[]	[java.lang.Object:(java.util.Date) (obj)]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29191:29200	791:791	toAppendTo	[]	[java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	29172:29201	791:791	format(((java.util.Date) (obj)), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.util.Date) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	29165:29202	791:791	return format(((java.util.Date) (obj)), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.util.Date) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29223:29225	792:792	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	29238:29245	792:792	java.util.Calendar	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	29223:29245	792:792	obj instanceof java.util.Calendar	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29287:29289	793:793	(java.util.Calendar) (obj)	[]	[java.lang.Object:(java.util.Calendar) (obj)]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29292:29301	793:793	toAppendTo	[]	[java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	29269:29302	793:793	format(((java.util.Calendar) (obj)), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.util.Calendar) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	29262:29303	793:793	return format(((java.util.Calendar) (obj)), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.util.Calendar) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29324:29326	794:794	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	29339:29342	794:794	java.lang.Long	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	29324:29342	794:794	obj instanceof java.lang.Long	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29381:29383	795:795	(java.lang.Long) (obj)	[]	[java.lang.Object:(java.lang.Long) (obj)]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
long	Expression	class spoon.support.reflect.code.CtInvocationImpl	29373:29396	795:795	(java.lang.Long) (obj)).longValue(	[]	[java.lang.Object:(java.lang.Long) (obj)]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29399:29408	795:795	toAppendTo	[]	[java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	29366:29409	795:795	format(((java.lang.Long) (obj)).longValue(), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.lang.Long) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	29359:29410	795:795	return format(((java.lang.Long) (obj)).longValue(), toAppendTo)	[java.lang.StringBuffer:format]	[java.lang.Object:(java.lang.Long) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	29476:29492	797:797	"Unknown class: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29513:29515	798:798	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	29520:29523	798:798	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	29513:29523	798:798	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	29527:29534	798:798	"<null>"	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29538:29540	798:798	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<? extends java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	29538:29551	798:798	obj.getClass()	[java.lang.Class<? extends java.lang.Object>:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	29538:29561	798:798	obj.getClass().getName()	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtConditionalImpl	29512:29562	798:798	obj == null ? "<null>" : obj.getClass().getName()	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	29476:29562	797:798	"Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	29447:29563	797:798	new java.lang.IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())))	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	29441:29564	797:798	throw new java.lang.IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())))	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	29320:29574	794:799	if (obj instanceof java.lang.Long) {    return format(((java.lang.Long) (obj)).longValue(), toAppendTo);}else {    throw new java.lang.IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())));}	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass, java.lang.StringBuffer:format]	[java.lang.Object:obj, java.lang.Object:(java.lang.Long) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	29219:29574	792:799	if (obj instanceof java.util.Calendar) {    return format(((java.util.Calendar) (obj)), toAppendTo);}else    if (obj instanceof java.lang.Long) {        return format(((java.lang.Long) (obj)).longValue(), toAppendTo);    }else {        throw new java.lang.IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())));    }	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass, java.lang.StringBuffer:format]	[java.lang.Object:obj, java.lang.Object:(java.util.Calendar) (obj), java.lang.Object:(java.lang.Long) (obj), java.lang.StringBuffer:toAppendTo]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	29126:29574	790:799	if (obj instanceof java.util.Date) {    return format(((java.util.Date) (obj)), toAppendTo);}else    if (obj instanceof java.util.Calendar) {        return format(((java.util.Calendar) (obj)), toAppendTo);    }else        if (obj instanceof java.lang.Long) {            return format(((java.lang.Long) (obj)).longValue(), toAppendTo);        }else {            throw new java.lang.IllegalArgumentException(("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName())));        }    	[java.lang.Class<? extends java.lang.Object>:getClass, java.lang.String:getClass, java.lang.StringBuffer:format]	[java.lang.Object:obj, java.lang.Object:(java.util.Calendar) (obj), java.lang.Object:(java.util.Date) (obj), java.lang.Object:(java.lang.Long) (obj), java.lang.StringBuffer:toAppendTo]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	29801:29804	809:809	long	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
long	Expression	class spoon.support.reflect.code.CtVariableReadImpl	29847:29852	810:810	millis	[]	[long:millis]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Date	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	29838:29853	810:810	new java.util.Date(millis)	[]	[long:millis]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	29831:29854	810:810	format(new java.util.Date(millis))	[java.lang.String:format]	[long:millis]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	29824:29855	810:810	return format(new java.util.Date(millis))	[java.lang.String:format]	[long:millis]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	30094:30102	820:820	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.GregorianCalendar	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	30072:30103	820:820	new java.util.GregorianCalendar(mTimeZone)	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	30059:30104	820:820	java.util.Calendar c = new java.util.GregorianCalendar(mTimeZone)	[]	[java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30114:30114	821:821	c	[]	[java.util.Calendar:c]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Date	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30124:30127	821:821	date	[]	[java.util.Date:date]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	30114:30129	821:821	c.setTime(date)	[void:setTime]	[java.util.Calendar:c, java.util.Date:date]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30157:30157	822:822	c	[]	[java.util.Calendar:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	30177:30194	822:822	mMaxLengthEstimate	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	30160:30195	822:822	new java.lang.StringBuffer(mMaxLengthEstimate)	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	30146:30196	822:822	applyRules(c, new java.lang.StringBuffer(mMaxLengthEstimate))	[java.lang.StringBuffer:applyRules]	[java.util.Calendar:c, int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	30146:30207	822:822	applyRules(c, new java.lang.StringBuffer(mMaxLengthEstimate)).toString()	[java.lang.StringBuffer:applyRules, java.lang.String:applyRules]	[java.util.Calendar:c, int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	30139:30208	822:822	return applyRules(c, new java.lang.StringBuffer(mMaxLengthEstimate)).toString()	[java.lang.StringBuffer:applyRules, java.lang.String:applyRules]	[java.util.Calendar:c, int:mMaxLengthEstimate]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30446:30453	832:832	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	30473:30490	832:832	mMaxLengthEstimate	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	30456:30491	832:832	new java.lang.StringBuffer(mMaxLengthEstimate)	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	30439:30492	832:832	format(calendar, new java.lang.StringBuffer(mMaxLengthEstimate))	[java.lang.StringBuffer:format]	[int:mMaxLengthEstimate, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	30439:30503	832:832	format(calendar, new java.lang.StringBuffer(mMaxLengthEstimate)).toString()	[java.lang.String:format, java.lang.StringBuffer:format]	[int:mMaxLengthEstimate, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	30432:30504	832:832	return format(calendar, new java.lang.StringBuffer(mMaxLengthEstimate)).toString()	[java.lang.String:format, java.lang.StringBuffer:format]	[int:mMaxLengthEstimate, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	30839:30842	844:844	long	[]	[]	[spoon.support.reflect.declaration.CtParameterImpl]	[]
long	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30903:30908	845:845	millis	[]	[long:millis]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Date	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	30894:30909	845:845	new java.util.Date(millis)	[]	[long:millis]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	30912:30914	845:845	buf	[]	[java.lang.StringBuffer:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	30887:30915	845:845	format(new java.util.Date(millis), buf)	[java.lang.StringBuffer:format]	[java.lang.StringBuffer:buf, long:millis]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	30880:30916	845:845	return format(new java.util.Date(millis), buf)	[java.lang.StringBuffer:format]	[java.lang.StringBuffer:buf, long:millis]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	31282:31290	857:857	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.GregorianCalendar	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	31260:31291	857:857	new java.util.GregorianCalendar(mTimeZone)	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	31247:31292	857:857	java.util.Calendar c = new java.util.GregorianCalendar(mTimeZone)	[]	[java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31302:31302	858:858	c	[]	[java.util.Calendar:c]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Date	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31312:31315	858:858	date	[]	[java.util.Date:date]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	31302:31317	858:858	c.setTime(date)	[void:setTime]	[java.util.Calendar:c, java.util.Date:date]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31345:31345	859:859	c	[]	[java.util.Calendar:c]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31348:31350	859:859	buf	[]	[java.lang.StringBuffer:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	31334:31351	859:859	applyRules(c, buf)	[java.lang.StringBuffer:applyRules]	[java.lang.StringBuffer:buf, java.util.Calendar:c]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	31327:31352	859:859	return applyRules(c, buf)	[java.lang.StringBuffer:applyRules]	[java.lang.StringBuffer:buf, java.util.Calendar:c]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	31707:31721	871:871	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31738:31745	872:872	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
long	Expression	class spoon.support.reflect.code.CtInvocationImpl	31738:31764	872:872	calendar.getTimeInMillis()	[long:getTimeInMillis]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	31791:31798	873:873	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31813:31820	873:873	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	31813:31828	873:873	(java.util.Calendar) (calendar.clone())	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	31791:31829	873:873	calendar = ((java.util.Calendar) (calendar.clone()))	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31843:31850	874:874	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	31864:31872	874:874	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	31843:31874	874:874	calendar.setTimeZone(mTimeZone)	[void:setTimeZone]	[java.util.Calendar:calendar, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	31703:31884	871:875	if (mTimeZoneForced) {    calendar.getTimeInMillis();    calendar = ((java.util.Calendar) (calendar.clone()));    calendar.setTimeZone(mTimeZone);}	[long:getTimeInMillis, void:setTimeZone]	[boolean:mTimeZoneForced, java.util.Calendar:calendar, java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31912:31919	876:876	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	31922:31924	876:876	buf	[]	[java.lang.StringBuffer:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	31901:31925	876:876	applyRules(calendar, buf)	[java.lang.StringBuffer:applyRules]	[java.lang.StringBuffer:buf, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	31894:31926	876:876	return applyRules(calendar, buf)	[java.lang.StringBuffer:applyRules]	[java.lang.StringBuffer:buf, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	32288:32293	888:888	mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	32273:32294	888:888	org.apache.commons.lang3.time.FastDateFormat.Rule[] rules = mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	32304:32306	889:889	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtFieldReadImpl	32314:32319	889:889	mRules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	32314:32326	889:889	mRules.length	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:length]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	32304:32327	889:889	int len = mRules.length	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:mRules, int:length]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	32342:32344	890:890	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	32350:32350	890:890	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	32342:32350	890:890	int i = 0	[]	[]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32353:32353	890:890	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32357:32359	890:890	len	[]	[int:len]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	32353:32359	890:890	i < len	[]	[int:i, int:len]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	32362:32362	890:890	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	32362:32364	890:890	i++	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32381:32385	891:891	rules	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:rules]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32387:32387	891:891	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat.Rule	Expression	class spoon.support.reflect.code.CtArrayReadImpl	32381:32388	891:891	rules[i]	[]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:rules, int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32399:32401	891:891	buf	[]	[java.lang.StringBuffer:buf]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.util.Calendar	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32404:32411	891:891	calendar	[]	[java.util.Calendar:calendar]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	32381:32413	891:891	rules[i].appendTo(buf, calendar)	[void:appendTo]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:rules, java.lang.StringBuffer:buf, int:i, java.util.Calendar:calendar]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	32337:32423	890:892	for (int i = 0; i < len; i++) {    rules[i].appendTo(buf, calendar);}	[void:appendTo]	[org.apache.commons.lang3.time.FastDateFormat.Rule[]:rules, java.lang.StringBuffer:buf, int:i, int:len, java.util.Calendar:calendar]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32440:32442	893:893	buf	[]	[java.lang.StringBuffer:buf]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	32433:32443	893:893	return buf	[]	[java.lang.StringBuffer:buf]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	32745:32753	905:905	@java.lang.Override	[]	[]	[]	[]
java.text.ParsePosition	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32829:32831	907:907	pos	[]	[java.text.ParsePosition:pos]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	32842:32842	907:907	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	32829:32844	907:907	pos.setIndex(0)	[void:setIndex]	[java.text.ParsePosition:pos]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.text.ParsePosition	Expression	class spoon.support.reflect.code.CtVariableReadImpl	32854:32856	908:908	pos	[]	[java.text.ParsePosition:pos]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	32872:32872	908:908	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	32854:32874	908:908	pos.setErrorIndex(0)	[void:setErrorIndex]	[java.text.ParsePosition:pos]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	32891:32894	909:909	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	32884:32895	909:909	return null	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	33204:33211	920:920	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	33197:33212	920:920	return mPattern	[]	[java.lang.String:mPattern]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	33628:33636	934:934	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	33621:33637	934:934	return mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtReturnImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	33951:33965	945:945	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	33944:33966	945:945	return mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	34126:34132	954:954	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	34119:34133	954:954	return mLocale	[]	[java.util.Locale:mLocale]	[]	[spoon.support.reflect.code.CtReturnImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	34435:34437	966:966	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	34479:34496	967:967	mMaxLengthEstimate	[]	[int:mMaxLengthEstimate]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	34472:34497	967:967	return mMaxLengthEstimate	[]	[int:mMaxLengthEstimate]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	34761:34769	978:978	@java.lang.Override	[]	[]	[]	[]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	34823:34825	980:980	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	34838:34851	980:980	org.apache.commons.lang3.time.FastDateFormat	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34823:34851	980:980	obj instanceof org.apache.commons.lang3.time.FastDateFormat	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	34856:34860	980:980	false	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34823:34860	980:980	(obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	34884:34888	981:981	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	34877:34889	981:981	return false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	34819:34899	980:982	if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {    return false;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	34949:34951	983:983	(org.apache.commons.lang3.time.FastDateFormat) (obj)	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat) (obj)]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	34909:34952	983:983	org.apache.commons.lang3.time.FastDateFormat other = ((org.apache.commons.lang3.time.FastDateFormat) (obj))	[]	[java.lang.Object:(org.apache.commons.lang3.time.FastDateFormat) (obj)]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	34980:34987	985:985	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	34992:34996	985:985	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	34992:35005	985:985	other.mPattern	[]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34980:35005	985:985	(mPattern) == (other.mPattern)	[]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35010:35017	985:985	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35026:35030	985:985	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35026:35039	985:985	other.mPattern	[]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	35010:35040	985:985	mPattern.equals(other.mPattern)	[boolean:equals]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34979:35041	985:985	((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))	[boolean:equals]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35059:35067	986:986	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35072:35076	986:986	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35072:35086	986:986	other.mTimeZone	[]	[org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35059:35086	986:986	(mTimeZone) == (other.mTimeZone)	[]	[org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35091:35099	986:986	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35108:35112	986:986	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35108:35122	986:986	other.mTimeZone	[]	[org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	35091:35123	986:986	mTimeZone.equals(other.mTimeZone)	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35058:35124	986:986	((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone))	[boolean:equals]	[org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34979:35124	985:986	(((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))) && (((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone)))	[boolean:equals]	[java.lang.String:mPattern, org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35142:35148	987:987	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35153:35157	987:987	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35153:35165	987:987	other.mLocale	[]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35142:35165	987:987	(mLocale) == (other.mLocale)	[]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35170:35176	987:987	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35185:35189	987:987	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35185:35197	987:987	other.mLocale	[]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	35170:35198	987:987	mLocale.equals(other.mLocale)	[boolean:equals]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35141:35199	987:987	((mLocale) == (other.mLocale)) || (mLocale.equals(other.mLocale))	[boolean:equals]	[java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34979:35199	985:987	((((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))) && (((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone)))) && (((mLocale) == (other.mLocale)) || (mLocale.equals(other.mLocale)))	[boolean:equals]	[java.lang.String:mPattern, java.util.Locale:mLocale, org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35217:35231	988:988	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35236:35240	988:988	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35236:35256	988:988	other.mTimeZoneForced	[]	[boolean:mTimeZoneForced, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35216:35257	988:988	(mTimeZoneForced) == (other.mTimeZoneForced)	[]	[boolean:mTimeZoneForced, org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34979:35257	985:988	(((((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))) && (((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone)))) && (((mLocale) == (other.mLocale)) || (mLocale.equals(other.mLocale)))) && ((mTimeZoneForced) == (other.mTimeZoneForced))	[boolean:equals]	[java.lang.String:mPattern, java.util.Locale:mLocale, boolean:mTimeZoneForced, org.apache.commons.lang3.time.FastDateFormat:other, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35275:35287	989:989	mLocaleForced	[]	[boolean:mLocaleForced]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.time.FastDateFormat	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35292:35296	989:989	other	[]	[org.apache.commons.lang3.time.FastDateFormat:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35292:35310	989:989	other.mLocaleForced	[]	[org.apache.commons.lang3.time.FastDateFormat:other, boolean:mLocaleForced]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	35274:35311	989:989	(mLocaleForced) == (other.mLocaleForced)	[]	[org.apache.commons.lang3.time.FastDateFormat:other, boolean:mLocaleForced]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	34979:35311	985:989	(((((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))) && (((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone)))) && (((mLocale) == (other.mLocale)) || (mLocale.equals(other.mLocale)))) && ((mTimeZoneForced) == (other.mTimeZoneForced))) && ((mLocaleForced) == (other.mLocaleForced)	[boolean:equals]	[java.lang.String:mPattern, java.util.Locale:mLocale, boolean:mTimeZoneForced, org.apache.commons.lang3.time.FastDateFormat:other, boolean:mLocaleForced, java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	35348:35351	991:991	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	35341:35352	991:991	return true	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	34962:35362	984:992	if (((((((mPattern) == (other.mPattern)) || (mPattern.equals(other.mPattern))) && (((mTimeZone) == (other.mTimeZone)) || (mTimeZone.equals(other.mTimeZone)))) && (((mLocale) == (other.mLocale)) || (mLocale.equals(other.mLocale)))) && ((mTimeZoneForced) == (other.mTimeZoneForced))) && ((mLocaleForced) == (other.mLocaleForced))) {    return true;}	[boolean:equals]	[java.lang.String:mPattern, java.util.Locale:mLocale, boolean:mTimeZoneForced, org.apache.commons.lang3.time.FastDateFormat:other, boolean:mLocaleForced, java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	35379:35383	993:993	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	35372:35384	993:993	return false	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	35527:35535	1001:1001	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	35548:35550	1002:1002	int	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	35573:35575	1003:1003	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	35585:35585	1003:1003	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	35573:35586	1003:1003	int total = 0	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	35596:35600	1004:1004	total	[]	[int:total]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35605:35612	1004:1004	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	35605:35623	1004:1004	mPattern.hashCode()	[int:hashCode]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	35596:35624	1004:1004	total += mPattern.hashCode()	[int:hashCode]	[java.lang.String:mPattern, int:total]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	35634:35638	1005:1005	total	[]	[int:total]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.TimeZone	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35643:35651	1005:1005	mTimeZone	[]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	35643:35662	1005:1005	mTimeZone.hashCode()	[int:hashCode]	[java.util.TimeZone:mTimeZone]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	35634:35663	1005:1005	total += mTimeZone.hashCode()	[int:hashCode]	[int:total, java.util.TimeZone:mTimeZone]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	35673:35677	1006:1006	total	[]	[int:total]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35683:35697	1006:1006	mTimeZoneForced	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	35701:35701	1006:1006	1	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	35705:35705	1006:1006	0	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtConditionalImpl	35682:35706	1006:1006	(mTimeZoneForced) ? 1 : 0	[]	[boolean:mTimeZoneForced]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	35673:35707	1006:1006	total += (mTimeZoneForced) ? 1 : 0	[]	[boolean:mTimeZoneForced, int:total]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	35717:35721	1007:1007	total	[]	[int:total]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35726:35732	1007:1007	mLocale	[]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	35726:35743	1007:1007	mLocale.hashCode()	[int:hashCode]	[java.util.Locale:mLocale]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	35717:35744	1007:1007	total += mLocale.hashCode()	[int:hashCode]	[java.util.Locale:mLocale, int:total]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	35754:35758	1008:1008	total	[]	[int:total]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	35764:35776	1008:1008	mLocaleForced	[]	[boolean:mLocaleForced]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	35780:35780	1008:1008	1	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	35784:35784	1008:1008	0	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtConditionalImpl	35763:35785	1008:1008	(mLocaleForced) ? 1 : 0	[]	[boolean:mLocaleForced]	[spoon.support.reflect.code.CtOperatorAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtOperatorAssignmentImpl	Statement	class spoon.support.reflect.code.CtOperatorAssignmentImpl	35754:35786	1008:1008	total += (mLocaleForced) ? 1 : 0	[]	[boolean:mLocaleForced, int:total]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	35803:35807	1009:1009	total	[]	[int:total]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	35796:35808	1009:1009	return total	[]	[int:total]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtOperatorAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	35944:35952	1017:1017	@java.lang.Override	[]	[]	[]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	36000:36016	1019:1019	"FastDateFormat["	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	36020:36027	1019:1019	mPattern	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	36000:36027	1019:1019	"FastDateFormat[" + (mPattern)	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	36031:36033	1019:1019	"]"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	36000:36033	1019:1019	("FastDateFormat[" + (mPattern)) + "]"	[]	[java.lang.String:mPattern]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	35993:36034	1019:1019	return ("FastDateFormat[" + (mPattern)) + "]"	[]	[java.lang.String:mPattern]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.io.ObjectInputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	36578:36579	1033:1033	in	[]	[java.io.ObjectInputStream:in]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	36578:36600	1033:1033	in.defaultReadObject()	[void:defaultReadObject]	[java.io.ObjectInputStream:in]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	36610:36616	1034:1034	init()	[void:init]	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1197:1200	33:33	long	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
long	Expression	class spoon.support.reflect.code.CtLiteralImpl	1221:1240	33:33	4954918890077093841L	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.apache.commons.lang3.Pair<L, R>	Expression	class spoon.support.reflect.code.CtThisAccessImpl	1477:1480	47:47	this	[]	[]	[spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	1477:1485	47:47	this.left	[]	[L:left]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1489:1492	47:47	left	[]	[L:left]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	1477:1493	47:47	this.left = left	[]	[L:left]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.Pair<L, R>	Expression	class spoon.support.reflect.code.CtThisAccessImpl	1503:1506	48:48	this	[]	[]	[spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
R	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	1503:1512	48:48	this.right	[]	[R:right]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
R	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1516:1520	48:48	right	[]	[R:right]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	1503:1521	48:48	this.right = right	[]	[R:right]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	1571:1579	54:54	@java.lang.Override	[]	[]	[]	[]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1633:1635	56:56	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.Pair<L, R>	Expression	class spoon.support.reflect.code.CtThisAccessImpl	1640:1643	56:56	this	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1633:1643	56:56	obj == (this)	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1667:1670	57:57	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1660:1671	57:57	return true	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1629:1681	56:58	if (obj == (this)) {    return true;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1695:1697	59:59	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1710:1713	59:59	org.apache.commons.lang3.Pair<?, ?>	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1695:1713	59:59	obj instanceof org.apache.commons.lang3.Pair<?, ?>	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1724:1728	59:59	false	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1695:1728	59:59	(obj instanceof org.apache.commons.lang3.Pair<?, ?>) == false	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1752:1756	60:60	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1745:1757	60:60	return false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1691:1767	59:61	if ((obj instanceof org.apache.commons.lang3.Pair<?, ?>) == false) {    return false;}	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1809:1811	62:62	(org.apache.commons.lang3.Pair<?, ?>) (obj)	[]	[java.lang.Object:(org.apache.commons.lang3.Pair<?, ?>) (obj)]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1777:1812	62:62	org.apache.commons.lang3.Pair<?, ?> other = ((org.apache.commons.lang3.Pair<?, ?>) (obj))	[]	[java.lang.Object:(org.apache.commons.lang3.Pair<?, ?>) (obj)]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1829:1839	63:63	org.apache.commons.lang3.ObjectUtils	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1848:1851	63:63	left	[]	[L:left]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.Pair<?, ?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1854:1858	63:63	other	[]	[org.apache.commons.lang3.Pair<?, ?>:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
?	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1854:1863	63:63	other.left	[]	[org.apache.commons.lang3.Pair<?, ?>:other, ?:left]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1829:1864	63:63	org.apache.commons.lang3.ObjectUtils.equals(left, other.left)	[boolean:equals]	[org.apache.commons.lang3.Pair<?, ?>:other, L:left, ?:left]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1869:1879	63:63	org.apache.commons.lang3.ObjectUtils	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
R	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1888:1892	63:63	right	[]	[R:right]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.Pair<?, ?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1895:1899	63:63	other	[]	[org.apache.commons.lang3.Pair<?, ?>:other]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
?	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1895:1905	63:63	other.right	[]	[org.apache.commons.lang3.Pair<?, ?>:other, ?:right]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1869:1906	63:63	org.apache.commons.lang3.ObjectUtils.equals(right, other.right)	[boolean:equals]	[org.apache.commons.lang3.Pair<?, ?>:other, ?:right, R:right]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1829:1906	63:63	org.apache.commons.lang3.ObjectUtils.equals(left, other.left)) && (org.apache.commons.lang3.ObjectUtils.equals(right, other.right)	[boolean:equals]	[org.apache.commons.lang3.Pair<?, ?>:other, ?:right, L:left, R:right, ?:left]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1822:1907	63:63	return (org.apache.commons.lang3.ObjectUtils.equals(left, other.left)) && (org.apache.commons.lang3.ObjectUtils.equals(right, other.right))	[boolean:equals]	[org.apache.commons.lang3.Pair<?, ?>:other, ?:right, L:left, R:right, ?:left]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	1957:1965	69:69	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1978:1980	70:70	int	[]	[]	[]	[]
org.apache.commons.lang3.builder.HashCodeBuilder	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2010:2030	71:71	new org.apache.commons.lang3.builder.HashCodeBuilder()	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2039:2042	71:71	left	[]	[L:left]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.builder.HashCodeBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2010:2043	71:71	new org.apache.commons.lang3.builder.HashCodeBuilder().append(left)	[org.apache.commons.lang3.builder.HashCodeBuilder:HashCodeBuilder]	[L:left]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
R	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2052:2056	71:71	right	[]	[R:right]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.apache.commons.lang3.builder.HashCodeBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2010:2057	71:71	new org.apache.commons.lang3.builder.HashCodeBuilder().append(left).append(right)	[org.apache.commons.lang3.builder.HashCodeBuilder:HashCodeBuilder]	[L:left, R:right]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	36947:36949	1048:1048	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2010:2070	71:71	new org.apache.commons.lang3.builder.HashCodeBuilder().append(left).append(right).toHashCode()	[org.apache.commons.lang3.builder.HashCodeBuilder:HashCodeBuilder, int:HashCodeBuilder]	[L:left, R:right]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2003:2071	71:71	return new org.apache.commons.lang3.builder.HashCodeBuilder().append(left).append(right).toHashCode()	[org.apache.commons.lang3.builder.HashCodeBuilder:HashCodeBuilder, int:HashCodeBuilder]	[L:left, R:right]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2170:2178	77:77	@java.lang.Override	[]	[]	[]	[]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2243:2261	79:79	new java.lang.StringBuilder()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2219:2262	79:79	java.lang.StringBuilder builder = new java.lang.StringBuilder()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2272:2278	80:80	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2287:2289	80:80	"("	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2272:2291	80:80	builder.append("(")	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2301:2307	81:81	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2316:2319	81:81	left	[]	[L:left]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2301:2321	81:81	builder.append(left)	[java.lang.StringBuilder:append]	[L:left, java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2331:2337	82:82	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2346:2348	82:82	","	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2331:2350	82:82	builder.append(",")	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2360:2366	83:83	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
R	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2375:2379	83:83	right	[]	[R:right]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2360:2381	83:83	builder.append(right)	[java.lang.StringBuilder:append]	[R:right, java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2391:2397	84:84	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2406:2408	84:84	")"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtInvocationImpl	2391:2410	84:84	builder.append(")")	[java.lang.StringBuilder:append]	[java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.StringBuilder	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2427:2433	85:85	builder	[]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2427:2444	85:85	builder.toString()	[java.lang.String:toString]	[java.lang.StringBuilder:builder]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2420:2445	85:85	return builder.toString()	[java.lang.String:toString]	[java.lang.StringBuilder:builder]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
L	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2762:2765	97:97	left	[]	[L:left]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
R	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2768:2772	97:97	right	[]	[R:right]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
org.apache.commons.lang3.Pair<L, R>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2747:2773	97:97	new org.apache.commons.lang3.Pair<L, R>(left, right)	[]	[L:left, R:right]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2740:2774	97:97	return new org.apache.commons.lang3.Pair<L, R>(left, right)	[]	[L:left, R:right]	[]	[spoon.support.reflect.code.CtReturnImpl]
