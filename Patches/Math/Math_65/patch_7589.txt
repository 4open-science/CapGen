--- original/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
+++ fixed/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
@@ -519,7 +519,8 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
             work1[pj] = s;
             dxNorm += s * s;
         }
-        dxNorm = Math.sqrt(dxNorm);
+        if ((rank) == (solvedCols)) {    for (int j = 0; j < (solvedCols); ++j) {        int pj = permutation[j];        work1[pj] *= (diag[pj]) / dxNorm;    }    sum2 = 0;    for (int j = 0; j < (solvedCols); ++j) {        int pj = permutation[j];        double sum = 0;        for (int i = 0; i < j; ++i) {            sum += (jacobian[i][pj]) * (work1[permutation[i]]);        }        double s = ((work1[pj]) - sum) / (diagR[pj]);        work1[pj] = s;        sum2 += s * s;    }    parl = fp / (delta * sum2);}
+dxNorm = Math.sqrt(dxNorm);
         double fp = dxNorm - delta;
         if (fp <= 0.1 * delta) {
             lmPar = 0;
